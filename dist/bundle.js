(()=>{"use strict";var r={729:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,"* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-family: 'lato', sans-serif;\r\n  line-height: 1.25;\r\n  color: var(--clr-3);\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n  background-color: var(--clr2);\r\n  margin: 0;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: normal;\r\n  font-family: lato-bold, sans-serif;\r\n  margin: 0;\r\n  color: var(--clr4);\r\n  text-transform: uppercase;\r\n  line-height: normal;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.75em;\r\n  margin: 1rem 0;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}\r\n\r\nbutton,\r\n.btn {\r\n    margin: 0;\r\n    font-family: lato-bold, sans-serif;\r\n    font-size: 1rem;\r\n    line-height: normal;\r\n    padding: 0.55em 1.3em;\r\n    border: 2px solid var(--clr3);\r\n    color: var(--clr3);\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    transition: background-color .3s, color .3s;\r\n}\r\n\r\nbutton:hover {\r\n    color: var(--clr1);\r\n    background-color: var(--clr6);\r\n    border-color: var(--clr1);\r\n}\r\n\r\n.delete-btn:hover {\r\n    color: var(--clr4);\r\n    border-color: var(--clr4);\r\n    background-color: transparent;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  font: inherit;\r\n  padding: 0.2rem 0.4rem;\r\n  width: 100%;\r\n  max-width: 30rem;\r\n  border: 1px solid var(--clr3);\r\n  background-color: var(--clr2);\r\n}\r\n\r\ninput:focus,\r\ntextarea:focus {\r\n  outline: none;\r\n  background-color: var(--clr1);\r\n}\r\n\r\n.margin-bot{\r\n  margin-bottom: 0.5rem;\r\n}","",{version:3,sources:["webpack://./src/assets/style/basics/base.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,+BAA+B;EAC/B,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,6BAA6B;EAC7B,SAAS;AACX;;AAEA;;;;;;EAME,mBAAmB;EACnB,kCAAkC;EAClC,SAAS;EACT,kBAAkB;EAClB,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,SAAS;AACX;;AAEA;;IAEI,SAAS;IACT,kCAAkC;IAClC,eAAe;IACf,mBAAmB;IACnB,qBAAqB;IACrB,6BAA6B;IAC7B,kBAAkB;IAClB,6BAA6B;IAC7B,eAAe;IACf,2CAA2C;AAC/C;;AAEA;IACI,kBAAkB;IAClB,6BAA6B;IAC7B,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,6BAA6B;EAC7B,6BAA6B;AAC/B;;AAEA;;EAEE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;AACvB",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n}\r\n\r\nhtml {\r\n  font-family: 'lato', sans-serif;\r\n  line-height: 1.25;\r\n  color: var(--clr-3);\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n  background-color: var(--clr2);\r\n  margin: 0;\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  font-weight: normal;\r\n  font-family: lato-bold, sans-serif;\r\n  margin: 0;\r\n  color: var(--clr4);\r\n  text-transform: uppercase;\r\n  line-height: normal;\r\n}\r\n\r\nh2 {\r\n  font-size: 1.75em;\r\n  margin: 1rem 0;\r\n}\r\n\r\np {\r\n  margin: 0;\r\n}\r\n\r\nbutton,\r\n.btn {\r\n    margin: 0;\r\n    font-family: lato-bold, sans-serif;\r\n    font-size: 1rem;\r\n    line-height: normal;\r\n    padding: 0.55em 1.3em;\r\n    border: 2px solid var(--clr3);\r\n    color: var(--clr3);\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    transition: background-color .3s, color .3s;\r\n}\r\n\r\nbutton:hover {\r\n    color: var(--clr1);\r\n    background-color: var(--clr6);\r\n    border-color: var(--clr1);\r\n}\r\n\r\n.delete-btn:hover {\r\n    color: var(--clr4);\r\n    border-color: var(--clr4);\r\n    background-color: transparent;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n  font: inherit;\r\n  padding: 0.2rem 0.4rem;\r\n  width: 100%;\r\n  max-width: 30rem;\r\n  border: 1px solid var(--clr3);\r\n  background-color: var(--clr2);\r\n}\r\n\r\ninput:focus,\r\ntextarea:focus {\r\n  outline: none;\r\n  background-color: var(--clr1);\r\n}\r\n\r\n.margin-bot{\r\n  margin-bottom: 0.5rem;\r\n}"],sourceRoot:""}]);const i=o},479:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,".flex {\r\n  display: flex;\r\n  gap: .5rem\r\n}\r\n\r\n/* FLEX HELPERS */\r\n.flex.column {\r\n  flex-direction: column;\r\n}\r\n\r\n.flex.align-center {\r\n  align-items: center;\r\n}\r\n\r\n.flex.justify-center {\r\n  justify-content: center;\r\n}\r\n\r\n.flex.space-between {\r\n  justify-content: space-between;\r\n}\r\n /* LIST HELPERS */\r\n.clean-list {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n}","",{version:3,sources:["webpack://./src/assets/style/basics/helpers.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb;AACF;;AAEA,iBAAiB;AACjB;EACE,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;AAChC;CACC,iBAAiB;AAClB;EACE,SAAS;EACT,UAAU;EACV,qBAAqB;AACvB",sourcesContent:[".flex {\r\n  display: flex;\r\n  gap: .5rem\r\n}\r\n\r\n/* FLEX HELPERS */\r\n.flex.column {\r\n  flex-direction: column;\r\n}\r\n\r\n.flex.align-center {\r\n  align-items: center;\r\n}\r\n\r\n.flex.justify-center {\r\n  justify-content: center;\r\n}\r\n\r\n.flex.space-between {\r\n  justify-content: space-between;\r\n}\r\n /* LIST HELPERS */\r\n.clean-list {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n}"],sourceRoot:""}]);const i=o},802:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,".main-layout:not(.full) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 6fr 1fr;\r\n}\r\n\r\n.full{\r\n  grid-column: 1 /-1;\r\n}\r\n\r\n.main-layout .content{\r\n  grid-column: 2;\r\n}\r\n\r\n.list-layout:not(.full){\r\n  display: grid;\r\n  grid-template-columns: 1rem auto 1rem;\r\n}\r\n\r\n.list-layout > *{\r\n  grid-column: 2;\r\n}\r\n\r\n#app main {\r\n  margin-block-start: 2rem;\r\n}","",{version:3,sources:["webpack://./src/assets/style/basics/layout.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,wBAAwB;AAC1B",sourcesContent:[".main-layout:not(.full) {\r\n  display: grid;\r\n  grid-template-columns: 1fr 6fr 1fr;\r\n}\r\n\r\n.full{\r\n  grid-column: 1 /-1;\r\n}\r\n\r\n.main-layout .content{\r\n  grid-column: 2;\r\n}\r\n\r\n.list-layout:not(.full){\r\n  display: grid;\r\n  grid-template-columns: 1rem auto 1rem;\r\n}\r\n\r\n.list-layout > *{\r\n  grid-column: 2;\r\n}\r\n\r\n#app main {\r\n  margin-block-start: 2rem;\r\n}"],sourceRoot:""}]);const i=o},502:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,".headder {\r\n  background-color: var(--clr5);\r\n  box-shadow: 7px -6px 9px 0px var(--clr5);\r\n}\r\n\r\n.headder h1 {\r\n  padding: 1.5rem 0;\r\n  color: var(--clr6);\r\n}","",{version:3,sources:["webpack://./src/assets/style/components/headder.css"],names:[],mappings:"AAAA;EACE,6BAA6B;EAC7B,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB",sourcesContent:[".headder {\r\n  background-color: var(--clr5);\r\n  box-shadow: 7px -6px 9px 0px var(--clr5);\r\n}\r\n\r\n.headder h1 {\r\n  padding: 1.5rem 0;\r\n  color: var(--clr6);\r\n}"],sourceRoot:""}]);const i=o},429:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,".task-form{\r\n    border: 3px solid var(--clr3);\r\n    padding: 1rem;\r\n}","",{version:3,sources:["webpack://./src/assets/style/components/task-form.css"],names:[],mappings:"AAAA;IACI,6BAA6B;IAC7B,aAAa;AACjB",sourcesContent:[".task-form{\r\n    border: 3px solid var(--clr3);\r\n    padding: 1rem;\r\n}"],sourceRoot:""}]);const i=o},238:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,".tasks li {\r\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26);\r\n    padding: 1rem;\r\n    margin-block: 1rem;\r\n    background: var(--clr1);\r\n  }\r\n\r\n  .tasks h5{\r\n    color: var(--clr3);\r\n  }","",{version:3,sources:["webpack://./src/assets/style/components/task-item.css"],names:[],mappings:"AAAA;IACI,2CAA2C;IAC3C,aAAa;IACb,kBAAkB;IAClB,uBAAuB;EACzB;;EAEA;IACE,kBAAkB;EACpB",sourcesContent:[".tasks li {\r\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26);\r\n    padding: 1rem;\r\n    margin-block: 1rem;\r\n    background: var(--clr1);\r\n  }\r\n\r\n  .tasks h5{\r\n    color: var(--clr3);\r\n  }"],sourceRoot:""}]);const i=o},506:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,'.tasks {\r\n  border: 3px solid var(--clr3);\r\n}\r\n\r\n.tasks select {\r\n  height: fit-content;\r\n  padding: 0.5rem;\r\n  font-family: "lato", sans-serif;\r\n}\r\n\r\n.tasks ul {\r\n  padding: 1rem;\r\n}\r\n\r\n#active-tasks header {\r\n  background-color: var(--clr5);\r\n}\r\n#active-tasks h2 {\r\n  color: var(--clr6);\r\n}\r\n\r\n#done-tasks header {\r\n  background-color: var(--clr6);\r\n}\r\n\r\n#done-tasks h2 {\r\n  color: var(--clr5);\r\n}\r\n\r\n.droppable {\r\n  background: var(--clr7);\r\n  padding-block-start: 1rem;\r\n}\r\n\r\n#done-tasks .droppable {\r\n  background: var(--clr8);\r\n  padding-block-start: 1rem;\r\n}\r\n',"",{version:3,sources:["webpack://./src/assets/style/components/task-list.css"],names:[],mappings:"AAAA;EACE,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,+BAA+B;AACjC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,6BAA6B;AAC/B;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,yBAAyB;AAC3B",sourcesContent:['.tasks {\r\n  border: 3px solid var(--clr3);\r\n}\r\n\r\n.tasks select {\r\n  height: fit-content;\r\n  padding: 0.5rem;\r\n  font-family: "lato", sans-serif;\r\n}\r\n\r\n.tasks ul {\r\n  padding: 1rem;\r\n}\r\n\r\n#active-tasks header {\r\n  background-color: var(--clr5);\r\n}\r\n#active-tasks h2 {\r\n  color: var(--clr6);\r\n}\r\n\r\n#done-tasks header {\r\n  background-color: var(--clr6);\r\n}\r\n\r\n#done-tasks h2 {\r\n  color: var(--clr5);\r\n}\r\n\r\n.droppable {\r\n  background: var(--clr7);\r\n  padding-block-start: 1rem;\r\n}\r\n\r\n#done-tasks .droppable {\r\n  background: var(--clr8);\r\n  padding-block-start: 1rem;\r\n}\r\n'],sourceRoot:""}]);const i=o},136:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,"#user-message-wraper{\r\n    position: fixed;\r\n    bottom: -20rem;\r\n    left: -20rem;\r\n    background-color: var(--clr6);\r\n    width: fit-content;\r\n    min-height: 2rem;\r\n    padding: 1rem;\r\n    transition: transform 1s ease-in-out;\r\n}\r\n\r\n#user-message-wraper.open{\r\n    transform: translate(20rem, -20rem) ;\r\n}\r\n\r\n#user-message-wraper h4{\r\n    color: var(--clr1);\r\n}","",{version:3,sources:["webpack://./src/assets/style/components/user-message.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;IACd,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["#user-message-wraper{\r\n    position: fixed;\r\n    bottom: -20rem;\r\n    left: -20rem;\r\n    background-color: var(--clr6);\r\n    width: fit-content;\r\n    min-height: 2rem;\r\n    padding: 1rem;\r\n    transition: transform 1s ease-in-out;\r\n}\r\n\r\n#user-message-wraper.open{\r\n    transform: translate(20rem, -20rem) ;\r\n}\r\n\r\n#user-message-wraper h4{\r\n    color: var(--clr1);\r\n}"],sourceRoot:""}]);const i=o},852:(r,n,e)=>{e.d(n,{Z:()=>i});var t=e(537),s=e.n(t),a=e(645),o=e.n(a)()(s());o.push([r.id,":root {\r\n    --clr1: #ffffff;\r\n    --clr2: #fafafa;\r\n    --clr3: #8e8e8e;\r\n    --clr4: #444444;\r\n    --clr5: #2d302e;\r\n    --clr6: #0b9150;\r\n    --clr7: #0b91502e;\r\n    --clr8: #2d302e39;\r\n\r\n\r\n    --l: 980px;\r\n    --m: 860px;\r\n    --s: 740px;\r\n}","",{version:3,sources:["webpack://./src/assets/style/setup/variables.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,iBAAiB;IACjB,iBAAiB;;;IAGjB,UAAU;IACV,UAAU;IACV,UAAU;AACd",sourcesContent:[":root {\r\n    --clr1: #ffffff;\r\n    --clr2: #fafafa;\r\n    --clr3: #8e8e8e;\r\n    --clr4: #444444;\r\n    --clr5: #2d302e;\r\n    --clr6: #0b9150;\r\n    --clr7: #0b91502e;\r\n    --clr8: #2d302e39;\r\n\r\n\r\n    --l: 980px;\r\n    --m: 860px;\r\n    --s: 740px;\r\n}"],sourceRoot:""}]);const i=o},150:(r,n,e)=>{e.d(n,{Z:()=>g});var t=e(537),s=e.n(t),a=e(645),o=e.n(a),i=e(729),c=e(479),l=e(802),A=e(852),d=e(506),u=e(429),p=e(238),m=e(502),h=e(136),f=o()(s());f.i(i.Z),f.i(c.Z),f.i(l.Z),f.i(A.Z),f.i(d.Z),f.i(u.Z),f.i(p.Z),f.i(m.Z),f.i(h.Z),f.push([r.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const g=f},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,s,a){"string"==typeof r&&(r=[[null,r,void 0]]);var o={};if(t)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var l=0;l<r.length;l++){var A=[].concat(r[l]);t&&o[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),s&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=s):A[4]="".concat(s)),n.push(A))}},n}},537:r=>{r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(s," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:r=>{var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},o=[],i=0;i<r.length;i++){var c=r[i],l=t.base?c[0]+t.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var u=e(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var m=s(p,t);t.byIndex=i,n.splice(i,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function s(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,s){var a=t(r=r||[],s=s||{});return function(r){r=r||[];for(var o=0;o<a.length;o++){var i=e(a[o]);n[i].references--}for(var c=t(r,s),l=0;l<a.length;l++){var A=e(a[l]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=c}}},569:r=>{var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{r.exports=function(r){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,s&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}}},n={};function e(t){var s=n[t];if(void 0!==s)return s.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.nc=void 0,(()=>{class r{constructor(r,n,e,t){this.templateEl=document.getElementById(r),this.hostEl=document.getElementById(n);const s=document.importNode(this.templateEl.content,!0);this.element=s.firstElementChild,t&&(this.element.id=t),this.attach(e)}attach(r){this.hostEl.insertAdjacentElement(r?"afterbegin":"beforeend",this.element)}}class n extends r{constructor(){super("user-message","app",!0),this.message=""}static getInstance(){return this.instance||(this.instance=new n),this.instance}configure(){}renderContent(){}renderMessage(r){const n=document.getElementById("message");n.innerText=r;const e=document.getElementById("user-message-wraper");e.classList.add("open"),setTimeout((()=>{n.innerText="",e.classList.remove("open")}),3e3)}}const t=n.getInstance();function s(r){let n=!0,e="Invalid Input:";const{value:s,field:a,isRequired:o,minLength:i,maxLength:c,min:l,max:A}=r;return o&&(n=n&&0!==s.toString().trim().length,e+=n?"":`\n${a} is required`),null!=i&&"string"==typeof s&&(n=n&&s.length>=i,e+=n?"":`\n${a} needs a minimun of ${i} characters`),null!=c&&"string"==typeof s&&(n=n&&s.length<=c,e+=n?"":`\n${a} can have a maximun of ${c} characters`),null!=l&&"number"==typeof s&&(n=n&&s>=l,e+=n?"":`\n${a} can have a minimun value of ${l}`),null!=A&&"number"==typeof s&&(n=n&&s<=A,e+=n?"":`\n${a} can have a maximum value of ${A}`),n||t.renderMessage(e),n}function a(r,n,e){const t=e.value;return{configurable:!0,get(){return t.bind(this)}}}var o;!function(r){r[r.Active=0]="Active",r[r.Done=1]="Done"}(o||(o={}));class i{constructor(r,n,e,t,s,a){this.title=r,this.description=n,this.priority=e,this.status=t,this.createdAt=s,this.id=a}}class c{static getInstance(){return this.instance||(this.instance=new c),this.instance}saveToStorage(r,n){const e=JSON.stringify(n);localStorage.setItem(r,e)}loadFromStorage(r){const n=localStorage.getItem(r);return n?JSON.parse(n):null}}const l=c.getInstance();function A(r=6){for(var n="",e=0;e<r;e++)n+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return n}class d{constructor(){this.listeners=[]}addListener(r){this.listeners.push(r)}}class u extends d{constructor(){super(),this.tasks=[],this.STORAGE_KEY="tasksDB",this.demoTasks=[{id:A(),title:"Create your first task",description:"Check it out!",priority:1,status:o.Active,createdAt:Date.now()}]}static getInstance(){return this.instance||(this.instance=new u),this.instance}query(){this.tasks=l.loadFromStorage(this.STORAGE_KEY),this.tasks&&this.tasks.length||(this.tasks=this.demoTasks,this.updateTaskStorage(this.tasks)),this.updateListeners()}addTask(r){r.id||(r.id=A()),this.tasks.push(r),this.updateListeners(),t.renderMessage("Task Added Successfully"),this.updateTaskStorage(this.tasks)}deleteTask(r){const n=this.tasks.findIndex((n=>n.id===r));this.tasks.splice(n,1),this.updateListeners(),t.renderMessage("Task Removed Successfully"),this.updateTaskStorage(this.tasks)}moveTask(r,n){const e=this.tasks.find((n=>n.id===r));e&&e.status!==n&&(e.status=n,this.updateListeners(),this.updateTaskStorage(this.tasks))}updateListeners(){for(const r of this.listeners)r(this.tasks.slice())}updateTaskStorage(r){l.saveToStorage(this.STORAGE_KEY,r)}}const p=u.getInstance();class m{constructor(r,n,e){this.enteredTitle=r,this.enteredDescription=n,this.enteredpriority=e,this.titleValidatable={field:"title",value:this.enteredTitle,isRequired:!0},this.descriptionValidatable={field:"description",value:this.enteredDescription,isRequired:!0,minLength:5},this.priorityValidatable={field:"priority",value:this.enteredpriority,isRequired:!0,min:1,max:5}}}class h extends r{constructor(){super("task-input","task-form-wraper",!0,"user-input"),this.titleInputEl=this.element.querySelector("#title"),this.descriptionInputEl=this.element.querySelector("#description"),this.priorityInputEl=this.element.querySelector("#priority"),this.configure()}configure(){this.element.addEventListener("submit",this.submitHandler)}gatherUserInput(){const r=this.titleInputEl.value,n=this.descriptionInputEl.value,e=+this.priorityInputEl.value,t=new m(r,n,e),{titleValidatable:a,descriptionValidatable:c,priorityValidatable:l}=t;if(s(a)&&s(c)&&s(l))return this.clearInputs(),new i(r,n,e,o.Active,Date.now())}clearInputs(){this.titleInputEl.value="",this.descriptionInputEl.value="",this.priorityInputEl.value=""}submitHandler(r){r.preventDefault();const n=this.gatherUserInput();n&&p.addTask(n)}renderContent(){}}!function(r,n,e,t){var s,a=arguments.length,o=a<3?n:null===t?t=Object.getOwnPropertyDescriptor(n,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(r,n,e,t);else for(var i=r.length-1;i>=0;i--)(s=r[i])&&(o=(a<3?s(o):a>3?s(n,e,o):s(n,e))||o);a>3&&o&&Object.defineProperty(n,e,o)}([a],h.prototype,"submitHandler",null);class f extends r{constructor(r,n){super("single-task",r,!1,n.id),this.task=n,this.configure(),this.renderContent()}dragStartHandler(r){r.dataTransfer.setData("text/plain",this.task.id),r.dataTransfer.effectAllowed="move"}configure(){document.getElementById("delete-btn").id=`delete-btn-${this.task.id}`,document.getElementById(`delete-btn-${this.task.id}`).onclick=()=>this.onDeleteTask(this.task.id),this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler)}renderContent(){var r;this.element.querySelector("h3").textContent=this.task.title,this.element.querySelector("h4").textContent="Priority: "+this.task.priority,this.element.querySelector("h5").textContent=(r=this.task.createdAt,`${new Date(r).toDateString()} at ${new Date(r).getHours()}:${new Date(r).getMinutes()}`),this.element.querySelector("p").textContent=this.task.description}onDeleteTask(r){p.deleteTask(r)}dragEndHandler(r){}}!function(r,n,e,t){var s,a=arguments.length,o=a<3?n:null===t?t=Object.getOwnPropertyDescriptor(n,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(r,n,e,t);else for(var i=r.length-1;i>=0;i--)(s=r[i])&&(o=(a<3?s(o):a>3?s(n,e,o):s(n,e))||o);a>3&&o&&Object.defineProperty(n,e,o)}([a],f.prototype,"dragStartHandler",null);var g=function(r,n,e,t){var s,a=arguments.length,o=a<3?n:null===t?t=Object.getOwnPropertyDescriptor(n,e):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(r,n,e,t);else for(var i=r.length-1;i>=0;i--)(s=r[i])&&(o=(a<3?s(o):a>3?s(n,e,o):s(n,e))||o);return a>3&&o&&Object.defineProperty(n,e,o),o};class C extends r{constructor(r){super("task-list","lists-wraper",!1,`${r}-tasks`),this.type=r,this.assignedTasks=[],this.sortBy="",this.configure(),this.renderContent(),p.query()}dragOverHandler(r){r.dataTransfer&&"text/plain"===r.dataTransfer.types[0]&&(r.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))}dropHandler(r){const n=r.dataTransfer.getData("text/plain");p.moveTask(n,"active"===this.type?o.Active:o.Done);const e=document.querySelectorAll("ul");for(const r of e)r.classList.remove("droppable")}configure(){this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler);const r=document.getElementById("sortby");r.id=`sortby-${this.type}`,this.sortBy=r.value,r.addEventListener("change",(()=>this.handleSortbyChange(r.value))),p.addListener(this.renderFilterdTasks)}renderContent(){const r=`${this.type}-task-list`;this.element.querySelector("ul").id=r,this.element.querySelector("h2").textContent=this.type.toUpperCase()}renderFilterdTasks(r){const n=r.filter((r=>"active"===this.type?r.status===o.Active:r.status===o.Done));this.assignedTasks=n,this.renderTasks()}renderTasks(){document.getElementById(`${this.type}-task-list`).innerHTML="";const r=this.assignedTasks.sort(((r,n)=>"priority"===this.sortBy?r.priority-n.priority:n.createdAt-r.createdAt));for(const n of r)new f(this.element.querySelector("ul").id,n)}handleSortbyChange(r){this.sortBy=r,this.renderTasks()}dragLeaveHandler(r){}}g([a],C.prototype,"dragOverHandler",null),g([a],C.prototype,"dropHandler",null),g([a],C.prototype,"renderFilterdTasks",null);var v=e(379),B=e.n(v),E=e(795),b=e.n(E),y=e(569),k=e.n(y),x=e(565),I=e.n(x),w=e(216),S=e.n(w),T=e(589),L=e.n(T),R=e(150),j={};j.styleTagTransform=L(),j.setAttributes=I(),j.insert=k().bind(null,"head"),j.domAPI=b(),j.insertStyleElement=S(),B()(R.Z,j),R.Z&&R.Z.locals&&R.Z.locals,console.log("app.ts Working"),document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM Loaded"),new h,new C("active"),new C("done")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUtzUSxhQUNULENBRVFBLGNBQ1d6TSxTQUFTd0QsZUFBZSxHQUFHckgsS0FBS2tQLGtCQUN4Q3FCLFVBQVksR0FFbkIsTUFBTUMsRUFBY3hRLEtBQUttUCxjQUFjc0IsTUFBSyxDQUFDeEssRUFBR3lLLElBQ3hCLGFBQWhCMVEsS0FBS29QLE9BQThCbkosRUFBRWlFLFNBQVd3RyxFQUFFeEcsU0FDL0N3RyxFQUFFdEcsVUFBWW5FLEVBQUVtRSxZQUczQixJQUFLLE1BQU11RyxLQUFXSCxFQUNsQixJQUFJdEMsRUFBU2xPLEtBQUt1RSxRQUFRVCxjQUFjLE1BQU9wRSxHQUFJaVIsRUFFM0QsQ0FFUVgsbUJBQW1CWSxHQUN2QjVRLEtBQUtvUCxPQUFTd0IsRUFDZDVRLEtBQUtzUSxhQUNULENBRUFSLGlCQUFpQmQsR0FBa0IsRUFuRW5DLEdBREN6RixHLG9DQVVELEdBRENBLEcsZ0NBK0JELEdBRENBLEcsZ0tDL0NEeEgsRUFBVSxDQUFDLEVBRWZBLEVBQVFnRCxrQkFBb0IsSUFDNUJoRCxFQUFRMEMsY0FBZ0IsSUFFbEIxQyxFQUFRMEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MxQixFQUFRZSxPQUFTLElBQ2pCZixFQUFRK0MsbUJBQXFCLElBRWhCLElBQUksSUFBUy9DLEdBS0osS0FBVyxZQUFpQixXQ3RCbEQ4TyxRQUFRQyxJQUFJLGtCQUVaak4sU0FBUzZKLGlCQUFpQixvQkFBb0IsS0FDMUNtRCxRQUFRQyxJQUFJLGNBQ1osSUFBSXhELEVBQ0osSUFBSTJCLEVBQVMsVUFDYixJQUFJQSxFQUFTLE9BQU8sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXNzZXRzL3N0eWxlL2Jhc2ljcy9iYXNlLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvaGVscGVycy5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvYmFzaWNzL2xheW91dC5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy9oZWFkZGVyLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2stZm9ybS5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWl0ZW0uY3NzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvdGFzay1saXN0LmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3VzZXItbWVzc2FnZS5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvc2V0dXAvdmFyaWFibGVzLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL21haW4uY3NzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9jb21wb25lbnRzL2Jhc2UtY29tcG9uZW50LnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvY29tcG9uZW50cy91c2VyLW1lc3NhZ2UudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy91dGlsL3ZhbGlkYXRpb24udHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9kZWNvcmF0b3JzL2F1dG9iaW5kLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvbW9kZWxzL3Rhc2sudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9zZXJ2aWNlcy9zdG9yYWdlLXNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy91dGlsL21ha2VJZC50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL3N0YXRlL3Rhc2stc3RhdGUudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9tb2RlbHMvdmFsaWRhdGlvbi1jcml0ZXJpYS50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvdGFzay1pbnB1dC50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvdGFzay1pdGVtLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvdXRpbC9mb3JtYXQtZGF0ZS10aW1lLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvY29tcG9uZW50cy90YXNrLWxpc3QudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9tYWluLmNzcz9kZGQzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXBwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxyXFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG5odG1sIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnbGF0bycsIHNhbnMtc2VyaWY7XFxyXFxuICBsaW5lLWhlaWdodDogMS4yNTtcXHJcXG4gIGNvbG9yOiB2YXIoLS1jbHItMyk7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgbWluLWhlaWdodDogMTAwdmg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIyKTtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuaDEsXFxyXFxuaDIsXFxyXFxuaDMsXFxyXFxuaDQsXFxyXFxuaDUsXFxyXFxuaDYge1xcclxcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXHJcXG4gIGZvbnQtZmFtaWx5OiBsYXRvLWJvbGQsIHNhbnMtc2VyaWY7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBjb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcclxcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXHJcXG59XFxyXFxuXFxyXFxuaDIge1xcclxcbiAgZm9udC1zaXplOiAxLjc1ZW07XFxyXFxuICBtYXJnaW46IDFyZW0gMDtcXHJcXG59XFxyXFxuXFxyXFxucCB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbixcXHJcXG4uYnRuIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBmb250LWZhbWlseTogbGF0by1ib2xkLCBzYW5zLXNlcmlmO1xcclxcbiAgICBmb250LXNpemU6IDFyZW07XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxyXFxuICAgIHBhZGRpbmc6IDAuNTVlbSAxLjNlbTtcXHJcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY2xyMyk7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MsIGNvbG9yIC4zcztcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWNscjEpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXHJcXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jbHIxKTtcXHJcXG59XFxyXFxuXFxyXFxuLmRlbGV0ZS1idG46aG92ZXIge1xcclxcbiAgICBjb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dCxcXHJcXG50ZXh0YXJlYSB7XFxyXFxuICBmb250OiBpbmhlcml0O1xcclxcbiAgcGFkZGluZzogMC4ycmVtIDAuNHJlbTtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgbWF4LXdpZHRoOiAzMHJlbTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNscjMpO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyMik7XFxyXFxufVxcclxcblxcclxcbmlucHV0OmZvY3VzLFxcclxcbnRleHRhcmVhOmZvY3VzIHtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIxKTtcXHJcXG59XFxyXFxuXFxyXFxuLm1hcmdpbi1ib3R7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvYmFzaWNzL2Jhc2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsK0JBQStCO0VBQy9CLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsNkJBQTZCO0VBQzdCLFNBQVM7QUFDWDs7QUFFQTs7Ozs7O0VBTUUsbUJBQW1CO0VBQ25CLGtDQUFrQztFQUNsQyxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTs7SUFFSSxTQUFTO0lBQ1Qsa0NBQWtDO0lBQ2xDLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsNkJBQTZCO0lBQzdCLGVBQWU7SUFDZiwyQ0FBMkM7QUFDL0M7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsNkJBQTZCO0FBQ2pDOztBQUVBOztFQUVFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsNkJBQTZCO0FBQy9COztBQUVBOztFQUVFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxyXFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcclxcbn1cXHJcXG5cXHJcXG5odG1sIHtcXHJcXG4gIGZvbnQtZmFtaWx5OiAnbGF0bycsIHNhbnMtc2VyaWY7XFxyXFxuICBsaW5lLWhlaWdodDogMS4yNTtcXHJcXG4gIGNvbG9yOiB2YXIoLS1jbHItMyk7XFxyXFxufVxcclxcblxcclxcbmJvZHkge1xcclxcbiAgbWluLWhlaWdodDogMTAwdmg7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIyKTtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG59XFxyXFxuXFxyXFxuaDEsXFxyXFxuaDIsXFxyXFxuaDMsXFxyXFxuaDQsXFxyXFxuaDUsXFxyXFxuaDYge1xcclxcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXHJcXG4gIGZvbnQtZmFtaWx5OiBsYXRvLWJvbGQsIHNhbnMtc2VyaWY7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxuICBjb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcclxcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXHJcXG59XFxyXFxuXFxyXFxuaDIge1xcclxcbiAgZm9udC1zaXplOiAxLjc1ZW07XFxyXFxuICBtYXJnaW46IDFyZW0gMDtcXHJcXG59XFxyXFxuXFxyXFxucCB7XFxyXFxuICBtYXJnaW46IDA7XFxyXFxufVxcclxcblxcclxcbmJ1dHRvbixcXHJcXG4uYnRuIHtcXHJcXG4gICAgbWFyZ2luOiAwO1xcclxcbiAgICBmb250LWZhbWlseTogbGF0by1ib2xkLCBzYW5zLXNlcmlmO1xcclxcbiAgICBmb250LXNpemU6IDFyZW07XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxyXFxuICAgIHBhZGRpbmc6IDAuNTVlbSAxLjNlbTtcXHJcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY2xyMyk7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxyXFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXHJcXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MsIGNvbG9yIC4zcztcXHJcXG59XFxyXFxuXFxyXFxuYnV0dG9uOmhvdmVyIHtcXHJcXG4gICAgY29sb3I6IHZhcigtLWNscjEpO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXHJcXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jbHIxKTtcXHJcXG59XFxyXFxuXFxyXFxuLmRlbGV0ZS1idG46aG92ZXIge1xcclxcbiAgICBjb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2xyNCk7XFxyXFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcclxcbn1cXHJcXG5cXHJcXG5pbnB1dCxcXHJcXG50ZXh0YXJlYSB7XFxyXFxuICBmb250OiBpbmhlcml0O1xcclxcbiAgcGFkZGluZzogMC4ycmVtIDAuNHJlbTtcXHJcXG4gIHdpZHRoOiAxMDAlO1xcclxcbiAgbWF4LXdpZHRoOiAzMHJlbTtcXHJcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNscjMpO1xcclxcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyMik7XFxyXFxufVxcclxcblxcclxcbmlucHV0OmZvY3VzLFxcclxcbnRleHRhcmVhOmZvY3VzIHtcXHJcXG4gIG91dGxpbmU6IG5vbmU7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIxKTtcXHJcXG59XFxyXFxuXFxyXFxuLm1hcmdpbi1ib3R7XFxyXFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4IHtcXHJcXG4gIGRpc3BsYXk6IGZsZXg7XFxyXFxuICBnYXA6IC41cmVtXFxyXFxufVxcclxcblxcclxcbi8qIEZMRVggSEVMUEVSUyAqL1xcclxcbi5mbGV4LmNvbHVtbiB7XFxyXFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbn1cXHJcXG5cXHJcXG4uZmxleC5hbGlnbi1jZW50ZXIge1xcclxcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG59XFxyXFxuXFxyXFxuLmZsZXguanVzdGlmeS1jZW50ZXIge1xcclxcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5mbGV4LnNwYWNlLWJldHdlZW4ge1xcclxcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcclxcbn1cXHJcXG4gLyogTElTVCBIRUxQRVJTICovXFxyXFxuLmNsZWFuLWxpc3Qge1xcclxcbiAgbWFyZ2luOiAwO1xcclxcbiAgcGFkZGluZzogMDtcXHJcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvaGVscGVycy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxhQUFhO0VBQ2I7QUFDRjs7QUFFQSxpQkFBaUI7QUFDakI7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7Q0FDQyxpQkFBaUI7QUFDbEI7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZmxleCB7XFxyXFxuICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgZ2FwOiAuNXJlbVxcclxcbn1cXHJcXG5cXHJcXG4vKiBGTEVYIEhFTFBFUlMgKi9cXHJcXG4uZmxleC5jb2x1bW4ge1xcclxcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXHJcXG59XFxyXFxuXFxyXFxuLmZsZXguYWxpZ24tY2VudGVyIHtcXHJcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxyXFxufVxcclxcblxcclxcbi5mbGV4Lmp1c3RpZnktY2VudGVyIHtcXHJcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbn1cXHJcXG5cXHJcXG4uZmxleC5zcGFjZS1iZXR3ZWVuIHtcXHJcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXHJcXG59XFxyXFxuIC8qIExJU1QgSEVMUEVSUyAqL1xcclxcbi5jbGVhbi1saXN0IHtcXHJcXG4gIG1hcmdpbjogMDtcXHJcXG4gIHBhZGRpbmc6IDA7XFxyXFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxyXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tYWluLWxheW91dDpub3QoLmZ1bGwpIHtcXHJcXG4gIGRpc3BsYXk6IGdyaWQ7XFxyXFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA2ZnIgMWZyO1xcclxcbn1cXHJcXG5cXHJcXG4uZnVsbHtcXHJcXG4gIGdyaWQtY29sdW1uOiAxIC8tMTtcXHJcXG59XFxyXFxuXFxyXFxuLm1haW4tbGF5b3V0IC5jb250ZW50e1xcclxcbiAgZ3JpZC1jb2x1bW46IDI7XFxyXFxufVxcclxcblxcclxcbi5saXN0LWxheW91dDpub3QoLmZ1bGwpe1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMXJlbSBhdXRvIDFyZW07XFxyXFxufVxcclxcblxcclxcbi5saXN0LWxheW91dCA+ICp7XFxyXFxuICBncmlkLWNvbHVtbjogMjtcXHJcXG59XFxyXFxuXFxyXFxuI2FwcCBtYWluIHtcXHJcXG4gIG1hcmdpbi1ibG9jay1zdGFydDogMnJlbTtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvbGF5b3V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm1haW4tbGF5b3V0Om5vdCguZnVsbCkge1xcclxcbiAgZGlzcGxheTogZ3JpZDtcXHJcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDZmciAxZnI7XFxyXFxufVxcclxcblxcclxcbi5mdWxse1xcclxcbiAgZ3JpZC1jb2x1bW46IDEgLy0xO1xcclxcbn1cXHJcXG5cXHJcXG4ubWFpbi1sYXlvdXQgLmNvbnRlbnR7XFxyXFxuICBncmlkLWNvbHVtbjogMjtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QtbGF5b3V0Om5vdCguZnVsbCl7XFxyXFxuICBkaXNwbGF5OiBncmlkO1xcclxcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxcmVtIGF1dG8gMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuLmxpc3QtbGF5b3V0ID4gKntcXHJcXG4gIGdyaWQtY29sdW1uOiAyO1xcclxcbn1cXHJcXG5cXHJcXG4jYXBwIG1haW4ge1xcclxcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAycmVtO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGRlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXHJcXG4gIGJveC1zaGFkb3c6IDdweCAtNnB4IDlweCAwcHggdmFyKC0tY2xyNSk7XFxyXFxufVxcclxcblxcclxcbi5oZWFkZGVyIGgxIHtcXHJcXG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xcclxcbiAgY29sb3I6IHZhcigtLWNscjYpO1xcclxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvaGVhZGRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSw2QkFBNkI7RUFDN0Isd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaGVhZGRlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXHJcXG4gIGJveC1zaGFkb3c6IDdweCAtNnB4IDlweCAwcHggdmFyKC0tY2xyNSk7XFxyXFxufVxcclxcblxcclxcbi5oZWFkZGVyIGgxIHtcXHJcXG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xcclxcbiAgY29sb3I6IHZhcigtLWNscjYpO1xcclxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFzay1mb3Jte1xcclxcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2stZm9ybS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSw2QkFBNkI7SUFDN0IsYUFBYTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudGFzay1mb3Jte1xcclxcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnRhc2tzIGxpIHtcXHJcXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCA4cHggcmdiYSgwLCAwLCAwLCAwLjI2KTtcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG4gICAgbWFyZ2luLWJsb2NrOiAxcmVtO1xcclxcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jbHIxKTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC50YXNrcyBoNXtcXHJcXG4gICAgY29sb3I6IHZhcigtLWNscjMpO1xcclxcbiAgfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWl0ZW0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksMkNBQTJDO0lBQzNDLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50YXNrcyBsaSB7XFxyXFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yNik7XFxyXFxuICAgIHBhZGRpbmc6IDFyZW07XFxyXFxuICAgIG1hcmdpbi1ibG9jazogMXJlbTtcXHJcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY2xyMSk7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAudGFza3MgaDV7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXHJcXG4gIH1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFza3Mge1xcclxcbiAgYm9yZGVyOiAzcHggc29saWQgdmFyKC0tY2xyMyk7XFxyXFxufVxcclxcblxcclxcbi50YXNrcyBzZWxlY3Qge1xcclxcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcXHJcXG4gIHBhZGRpbmc6IDAuNXJlbTtcXHJcXG4gIGZvbnQtZmFtaWx5OiBcXFwibGF0b1xcXCIsIHNhbnMtc2VyaWY7XFxyXFxufVxcclxcblxcclxcbi50YXNrcyB1bCB7XFxyXFxuICBwYWRkaW5nOiAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jYWN0aXZlLXRhc2tzIGhlYWRlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXHJcXG59XFxyXFxuI2FjdGl2ZS10YXNrcyBoMiB7XFxyXFxuICBjb2xvcjogdmFyKC0tY2xyNik7XFxyXFxufVxcclxcblxcclxcbiNkb25lLXRhc2tzIGhlYWRlciB7XFxyXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXHJcXG59XFxyXFxuXFxyXFxuI2RvbmUtdGFza3MgaDIge1xcclxcbiAgY29sb3I6IHZhcigtLWNscjUpO1xcclxcbn1cXHJcXG5cXHJcXG4uZHJvcHBhYmxlIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNscjcpO1xcclxcbiAgcGFkZGluZy1ibG9jay1zdGFydDogMXJlbTtcXHJcXG59XFxyXFxuXFxyXFxuI2RvbmUtdGFza3MgLmRyb3BwYWJsZSB7XFxyXFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1jbHI4KTtcXHJcXG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IDFyZW07XFxyXFxufVxcclxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWxpc3QuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0FBQzNCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50YXNrcyB7XFxyXFxuICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2tzIHNlbGVjdCB7XFxyXFxuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xcclxcbiAgcGFkZGluZzogMC41cmVtO1xcclxcbiAgZm9udC1mYW1pbHk6IFxcXCJsYXRvXFxcIiwgc2Fucy1zZXJpZjtcXHJcXG59XFxyXFxuXFxyXFxuLnRhc2tzIHVsIHtcXHJcXG4gIHBhZGRpbmc6IDFyZW07XFxyXFxufVxcclxcblxcclxcbiNhY3RpdmUtdGFza3MgaGVhZGVyIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNscjUpO1xcclxcbn1cXHJcXG4jYWN0aXZlLXRhc2tzIGgyIHtcXHJcXG4gIGNvbG9yOiB2YXIoLS1jbHI2KTtcXHJcXG59XFxyXFxuXFxyXFxuI2RvbmUtdGFza3MgaGVhZGVyIHtcXHJcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNscjYpO1xcclxcbn1cXHJcXG5cXHJcXG4jZG9uZS10YXNrcyBoMiB7XFxyXFxuICBjb2xvcjogdmFyKC0tY2xyNSk7XFxyXFxufVxcclxcblxcclxcbi5kcm9wcGFibGUge1xcclxcbiAgYmFja2dyb3VuZDogdmFyKC0tY2xyNyk7XFxyXFxuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiAxcmVtO1xcclxcbn1cXHJcXG5cXHJcXG4jZG9uZS10YXNrcyAuZHJvcHBhYmxlIHtcXHJcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNscjgpO1xcclxcbiAgcGFkZGluZy1ibG9jay1zdGFydDogMXJlbTtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiI3VzZXItbWVzc2FnZS13cmFwZXJ7XFxyXFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXHJcXG4gICAgYm90dG9tOiAtMjByZW07XFxyXFxuICAgIGxlZnQ6IC0yMHJlbTtcXHJcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyNik7XFxyXFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXHJcXG4gICAgbWluLWhlaWdodDogMnJlbTtcXHJcXG4gICAgcGFkZGluZzogMXJlbTtcXHJcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGVhc2UtaW4tb3V0O1xcclxcbn1cXHJcXG5cXHJcXG4jdXNlci1tZXNzYWdlLXdyYXBlci5vcGVue1xcclxcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMHJlbSwgLTIwcmVtKSA7XFxyXFxufVxcclxcblxcclxcbiN1c2VyLW1lc3NhZ2Utd3JhcGVyIGg0e1xcclxcbiAgICBjb2xvcjogdmFyKC0tY2xyMSk7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy91c2VyLW1lc3NhZ2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjdXNlci1tZXNzYWdlLXdyYXBlcntcXHJcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcclxcbiAgICBib3R0b206IC0yMHJlbTtcXHJcXG4gICAgbGVmdDogLTIwcmVtO1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXHJcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcclxcbiAgICBtaW4taGVpZ2h0OiAycmVtO1xcclxcbiAgICBwYWRkaW5nOiAxcmVtO1xcclxcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZS1pbi1vdXQ7XFxyXFxufVxcclxcblxcclxcbiN1c2VyLW1lc3NhZ2Utd3JhcGVyLm9wZW57XFxyXFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwcmVtLCAtMjByZW0pIDtcXHJcXG59XFxyXFxuXFxyXFxuI3VzZXItbWVzc2FnZS13cmFwZXIgaDR7XFxyXFxuICAgIGNvbG9yOiB2YXIoLS1jbHIxKTtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcclxcbiAgICAtLWNscjE6ICNmZmZmZmY7XFxyXFxuICAgIC0tY2xyMjogI2ZhZmFmYTtcXHJcXG4gICAgLS1jbHIzOiAjOGU4ZThlO1xcclxcbiAgICAtLWNscjQ6ICM0NDQ0NDQ7XFxyXFxuICAgIC0tY2xyNTogIzJkMzAyZTtcXHJcXG4gICAgLS1jbHI2OiAjMGI5MTUwO1xcclxcbiAgICAtLWNscjc6ICMwYjkxNTAyZTtcXHJcXG4gICAgLS1jbHI4OiAjMmQzMDJlMzk7XFxyXFxuXFxyXFxuXFxyXFxuICAgIC0tbDogOTgwcHg7XFxyXFxuICAgIC0tbTogODYwcHg7XFxyXFxuICAgIC0tczogNzQwcHg7XFxyXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvc2V0dXAvdmFyaWFibGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixpQkFBaUI7OztJQUdqQixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxyXFxuICAgIC0tY2xyMTogI2ZmZmZmZjtcXHJcXG4gICAgLS1jbHIyOiAjZmFmYWZhO1xcclxcbiAgICAtLWNscjM6ICM4ZThlOGU7XFxyXFxuICAgIC0tY2xyNDogIzQ0NDQ0NDtcXHJcXG4gICAgLS1jbHI1OiAjMmQzMDJlO1xcclxcbiAgICAtLWNscjY6ICMwYjkxNTA7XFxyXFxuICAgIC0tY2xyNzogIzBiOTE1MDJlO1xcclxcbiAgICAtLWNscjg6ICMyZDMwMmUzOTtcXHJcXG5cXHJcXG5cXHJcXG4gICAgLS1sOiA5ODBweDtcXHJcXG4gICAgLS1tOiA4NjBweDtcXHJcXG4gICAgLS1zOiA3NDBweDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9iYXNpY3MvYmFzZS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvYmFzaWNzL2hlbHBlcnMuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL2Jhc2ljcy9sYXlvdXQuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL3NldHVwL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWxpc3QuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF81X19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvdGFzay1mb3JtLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNl9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2staXRlbS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzdfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvY29tcG9uZW50cy9oZWFkZGVyLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOF9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3VzZXItbWVzc2FnZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF80X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF81X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF82X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF83X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF84X19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tcG9uZW50PFQgZXh0ZW5kcyBIVE1MRWxlbWVudCwgVSBleHRlbmRzIEhUTUxFbGVtZW50PiB7XHJcbiAgICB0ZW1wbGF0ZUVsOiBIVE1MVGVtcGxhdGVFbGVtZW50XHJcbiAgICBob3N0RWw6IFRcclxuICAgIGVsZW1lbnQ6IFVcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0ZW1wbGF0ZUlEOiBzdHJpbmcsXHJcbiAgICAgICAgaG9zdEVsSWQ6IHN0cmluZyxcclxuICAgICAgICBpbnNlcnRBdFN0YXJ0OiBib29sZWFuLFxyXG4gICAgICAgIG5ld0VsSWQ/OiBzdHJpbmcsXHJcbiAgICApIHtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLnRlbXBsYXRlRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0ZW1wbGF0ZUlEKSEgYXMgSFRNTFRlbXBsYXRlRWxlbWVudFxyXG4gICAgICAgIHRoaXMuaG9zdEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaG9zdEVsSWQpISBhcyBUXHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgaW1wb3J0ZWROb2RlID0gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0aGlzLnRlbXBsYXRlRWwuY29udGVudCwgdHJ1ZSlcclxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBpbXBvcnRlZE5vZGUuZmlyc3RFbGVtZW50Q2hpbGQgYXMgVVxyXG4gICAgICAgIGlmIChuZXdFbElkKSB0aGlzLmVsZW1lbnQuaWQgPSBuZXdFbElkXHJcblxyXG4gICAgICAgIHRoaXMuYXR0YWNoKGluc2VydEF0U3RhcnQpXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBhdHRhY2goaW5zZXJ0QXRTdGFydDogYm9vbGVhbikgeyAgICAgICAgXHJcbiAgICAgICAgdGhpcy5ob3N0RWwuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KGluc2VydEF0U3RhcnQgPyBgYWZ0ZXJiZWdpbmAgOiBgYmVmb3JlZW5kYCwgdGhpcy5lbGVtZW50KVxyXG4gICAgfVxyXG5cclxuICAgIGFic3RyYWN0IGNvbmZpZ3VyZSgpOiB2b2lkXHJcbiAgICBhYnN0cmFjdCByZW5kZXJDb250ZW50KCk6IHZvaWRcclxufSIsImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCIuL2Jhc2UtY29tcG9uZW50XCI7XHJcblxyXG5leHBvcnQgY2xhc3MgVXNlck1lc3NhZ2UgZXh0ZW5kcyBDb21wb25lbnQ8SFRNTERpdkVsZW1lbnQsIEhUTUxFbGVtZW50PntcclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBVc2VyTWVzc2FnZVxyXG4gICAgbWVzc2FnZTogc3RyaW5nID0gYGBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKGB1c2VyLW1lc3NhZ2VgLCBgYXBwYCwgdHJ1ZSlcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5zdGFuY2UpIHJldHVybiB0aGlzLmluc3RhbmNlXHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBVc2VyTWVzc2FnZSgpXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VcclxuICAgIH1cclxuXHJcbiAgICBjb25maWd1cmUoKTogdm9pZCB7IH1cclxuXHJcbiAgICByZW5kZXJDb250ZW50KCk6IHZvaWQge31cclxuXHJcbiAgICByZW5kZXJNZXNzYWdlKG1lc3NhZ2U6IHN0cmluZykge1xyXG4gICAgICAgIGNvbnN0IG1lc3NhZ2VFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBtZXNzYWdlYCkhIGFzIEhUTUxFbGVtZW50XHJcbiAgICAgICAgbWVzc2FnZUVsLmlubmVyVGV4dCA9IG1lc3NhZ2VcclxuICAgICAgICBjb25zdCBtZXNzYWdlV3JhcHBlckVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3VzZXItbWVzc2FnZS13cmFwZXInKSBhcyBIVE1MRWxlbWVudFxyXG4gICAgICAgIG1lc3NhZ2VXcmFwcGVyRWwuY2xhc3NMaXN0LmFkZCgnb3BlbicpXHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIG1lc3NhZ2VFbC5pbm5lclRleHQgPSBgYFxyXG4gICAgICAgICAgICBtZXNzYWdlV3JhcHBlckVsLmNsYXNzTGlzdC5yZW1vdmUoJ29wZW4nKVxyXG4gICAgICAgIH0sIDMwMDApXHJcbiAgICB9XHJcbn1cclxuZXhwb3J0IGNvbnN0IHVzZXJNZXNzYWdlID0gVXNlck1lc3NhZ2UuZ2V0SW5zdGFuY2UoKSIsImltcG9ydCB7IHVzZXJNZXNzYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXNlci1tZXNzYWdlXCJcclxuXHJcbiAgICAvLyAtLS0tLSBWQUxJREFUSU9OIC0tLS0tXHJcbiAgICBleHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRhYmxlIHtcclxuICAgICAgICBmaWVsZDogc3RyaW5nXHJcbiAgICAgICAgdmFsdWU6IHN0cmluZyB8IG51bWJlclxyXG4gICAgICAgIGlzUmVxdWlyZWQ/OiBib29sZWFuXHJcbiAgICAgICAgbWluTGVuZ3RoPzogbnVtYmVyXHJcbiAgICAgICAgbWF4TGVuZ3RoPzogbnVtYmVyXHJcbiAgICAgICAgbWluPzogbnVtYmVyXHJcbiAgICAgICAgbWF4PzogbnVtYmVyXHJcbiAgICB9XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlKHZhbGlkYXRpb25JbnB1dDogVmFsaWRhdGFibGUpIHtcclxuICAgICAgICBsZXQgaXNWYWxpZCA9IHRydWVcclxuICAgICAgICBsZXQgbWVzc2FnZSA9ICdJbnZhbGlkIElucHV0OidcclxuICAgICAgICBjb25zdCB7IHZhbHVlLCBmaWVsZCwgaXNSZXF1aXJlZCwgbWluTGVuZ3RoLCBtYXhMZW5ndGgsIG1pbiwgbWF4IH0gPSB2YWxpZGF0aW9uSW5wdXRcclxuICAgICAgICBpZiAoaXNSZXF1aXJlZCkge1xyXG4gICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiB2YWx1ZS50b1N0cmluZygpLnRyaW0oKS5sZW5ndGggIT09IDBcclxuICAgICAgICAgICAgbWVzc2FnZSArPSBpc1ZhbGlkID8gYGAgOiBgXFxuJHtmaWVsZH0gaXMgcmVxdWlyZWRgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtaW5MZW5ndGggIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IGBzdHJpbmdgKSB7XHJcbiAgICAgICAgICAgIGlzVmFsaWQgPSBpc1ZhbGlkICYmIHZhbHVlLmxlbmd0aCA+PSBtaW5MZW5ndGhcclxuICAgICAgICAgICAgbWVzc2FnZSArPSBpc1ZhbGlkID8gYGAgOiBgXFxuJHtmaWVsZH0gbmVlZHMgYSBtaW5pbXVuIG9mICR7bWluTGVuZ3RofSBjaGFyYWN0ZXJzYFxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAobWF4TGVuZ3RoICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSBgc3RyaW5nYCkge1xyXG4gICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiB2YWx1ZS5sZW5ndGggPD0gbWF4TGVuZ3RoXHJcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gaXNWYWxpZCA/IGBgIDogYFxcbiR7ZmllbGR9IGNhbiBoYXZlIGEgbWF4aW11biBvZiAke21heExlbmd0aH0gY2hhcmFjdGVyc2BcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG1pbiAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gYG51bWJlcmApIHtcclxuICAgICAgICAgICAgaXNWYWxpZCA9IGlzVmFsaWQgJiYgdmFsdWUgPj0gbWluXHJcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gaXNWYWxpZCA/IGBgIDogYFxcbiR7ZmllbGR9IGNhbiBoYXZlIGEgbWluaW11biB2YWx1ZSBvZiAke21pbn1gXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChtYXggIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IGBudW1iZXJgKSB7XHJcbiAgICAgICAgICAgIGlzVmFsaWQgPSBpc1ZhbGlkICYmIHZhbHVlIDw9IG1heFxyXG4gICAgICAgICAgICBtZXNzYWdlICs9IGlzVmFsaWQgPyBgYCA6IGBcXG4ke2ZpZWxkfSBjYW4gaGF2ZSBhIG1heGltdW0gdmFsdWUgb2YgJHttYXh9YFxyXG4gICAgICAgIH1cclxuICAgICAgICBpZighaXNWYWxpZCkgdXNlck1lc3NhZ2UucmVuZGVyTWVzc2FnZShtZXNzYWdlKVxyXG4gICAgICAgIHJldHVybiBpc1ZhbGlkXHJcbiAgICB9IiwiLy8gLS0tLS0gQVVUT0JJTkQgVVRJTCBERUNPUkFUT1IgLS0tLS1cclxuZXhwb3J0IGZ1bmN0aW9uIEF1dG9iaW5kKF8xOiBhbnksIF8yOiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcikge1xyXG4gICAgY29uc3Qgb3JpZ2luYWxNZXRob2QgPSBkZXNjcmlwdG9yLnZhbHVlXHJcbiAgICBjb25zdCBhZGpEZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IgPSB7XHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIC8vIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGdldCgpIHtcclxuICAgICAgICAgICAgY29uc3QgYm91bmRGdW5jID0gb3JpZ2luYWxNZXRob2QuYmluZCh0aGlzKVxyXG4gICAgICAgICAgICByZXR1cm4gYm91bmRGdW5jXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFkakRlc2NyaXB0b3JcclxufSIsIiAgICBleHBvcnQgZW51bSBUYXNrU3RhdHVzIHsgQWN0aXZlLCBEb25lIH1cclxuICAgIFxyXG4gICAgZXhwb3J0IGNsYXNzIFRhc2sge1xyXG4gICAgICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICBwdWJsaWMgdGl0bGU6IHN0cmluZyxcclxuICAgICAgICAgICAgcHVibGljIGRlc2NyaXB0aW9uOiBzdHJpbmcsXHJcbiAgICAgICAgICAgIHB1YmxpYyBwcmlvcml0eTogbnVtYmVyLFxyXG4gICAgICAgICAgICBwdWJsaWMgc3RhdHVzOiBUYXNrU3RhdHVzLFxyXG4gICAgICAgICAgICBwdWJsaWMgY3JlYXRlZEF0OiBudW1iZXIsXHJcbiAgICAgICAgICAgIHB1YmxpYyBpZD86IHN0cmluZ1xyXG4gICAgICAgICAgICApIHsgfVxyXG4gICAgfSIsImNsYXNzIExvY2FsU3RvcmFnZVNlcnZpY2Uge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IExvY2FsU3RvcmFnZVNlcnZpY2VcclxuXHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5zdGFuY2UpIHJldHVybiB0aGlzLmluc3RhbmNlXHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBMb2NhbFN0b3JhZ2VTZXJ2aWNlKClcclxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZVxyXG4gICAgfVxyXG5cclxuICAgIHNhdmVUb1N0b3JhZ2U8VD4oa2V5OiBzdHJpbmcsIHZhbHVlOiBUKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSlcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBkYXRhKVxyXG4gICAgICAgIH1cclxuICAgIGxvYWRGcm9tU3RvcmFnZShrZXk6IHN0cmluZyl7ICAgICAgICBcclxuICAgICAgICAgICAgY29uc3QgZGF0YSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGtleSlcclxuICAgICAgICAgICAgaWYoZGF0YSkgcmV0dXJuIEpTT04ucGFyc2UoZGF0YSlcclxuICAgICAgICAgICAgcmV0dXJuIG51bGxcclxuICAgICAgICB9XHJcbiAgfVxyXG4gIGV4cG9ydCBjb25zdCBsb2NhbFN0b3JhZ2VTZXJ2aWNlID0gTG9jYWxTdG9yYWdlU2VydmljZS5nZXRJbnN0YW5jZSgpIiwiZXhwb3J0IGZ1bmN0aW9uIG1ha2VJZChsZW5ndGggPSA2KSB7XHJcbiAgICB2YXIgdHh0ID0gJydcclxuICAgIHZhciBwb3NzaWJsZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSdcclxuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdHh0ICs9IHBvc3NpYmxlLmNoYXJBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBwb3NzaWJsZS5sZW5ndGgpKVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0eHRcclxufSIsImltcG9ydCB7IHVzZXJNZXNzYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXNlci1tZXNzYWdlXCJcclxuaW1wb3J0IHsgVGFzaywgVGFza1N0YXR1cyB9IGZyb20gXCIuLi9tb2RlbHMvdGFza1wiXHJcbmltcG9ydCB7IGxvY2FsU3RvcmFnZVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmljZXMvc3RvcmFnZS1zZXJ2aWNlXCJcclxuaW1wb3J0IHsgbWFrZUlkIH0gZnJvbSBcIi4uL3V0aWwvbWFrZUlkXCJcclxuLy8gU1RBVEUgTUFOQUdFTUVOVFxyXG50eXBlIExpc3RlbmVyPFQ+ID0gKGl0ZW1zOiBUW10pID0+IHZvaWRcclxuXHJcbmNsYXNzIFN0YXRlPFQ+IHtcclxuICAgIHByb3RlY3RlZCBsaXN0ZW5lcnM6IExpc3RlbmVyPFQ+W10gPSBbXVxyXG4gICAgYWRkTGlzdGVuZXIobGlzdGVuZXJGdW5jOiBMaXN0ZW5lcjxUPikge1xyXG4gICAgICAgIHRoaXMubGlzdGVuZXJzLnB1c2gobGlzdGVuZXJGdW5jKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgVGFza1N0YXRlIGV4dGVuZHMgU3RhdGU8VGFzaz57XHJcbiAgICBwcml2YXRlIHRhc2tzOiBUYXNrW10gPSBbXVxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFRhc2tTdGF0ZVxyXG4gICAgcHJpdmF0ZSBTVE9SQUdFX0tFWSA9ICd0YXNrc0RCJ1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgc3VwZXIoKVxyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5pbnN0YW5jZSkgcmV0dXJuIHRoaXMuaW5zdGFuY2VcclxuICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IFRhc2tTdGF0ZSgpXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VcclxuICAgIH1cclxuXHJcbiAgICBxdWVyeSgpIHtcclxuICAgICAgICB0aGlzLnRhc2tzID0gbG9jYWxTdG9yYWdlU2VydmljZS5sb2FkRnJvbVN0b3JhZ2UodGhpcy5TVE9SQUdFX0tFWSlcclxuICAgICAgICBpZiAoIXRoaXMudGFza3MgfHwgIXRoaXMudGFza3MubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHRoaXMudGFza3MgPSB0aGlzLmRlbW9UYXNrc1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRhc2tTdG9yYWdlKHRoaXMudGFza3MpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudXBkYXRlTGlzdGVuZXJzKClcclxuICAgIH1cclxuXHJcbiAgICBhZGRUYXNrKG5ld1Rhc2s6IFRhc2spIHtcclxuICAgICAgICBpZighbmV3VGFzay5pZCkgbmV3VGFzay5pZCA9IG1ha2VJZCgpXHJcbiAgICAgICAgLy8gdXBkYXRlIHN0YXRlXHJcbiAgICAgICAgdGhpcy50YXNrcy5wdXNoKG5ld1Rhc2spXHJcbiAgICAgICAgdGhpcy51cGRhdGVMaXN0ZW5lcnMoKVxyXG4gICAgICAgIHVzZXJNZXNzYWdlLnJlbmRlck1lc3NhZ2UoYFRhc2sgQWRkZWQgU3VjY2Vzc2Z1bGx5YClcclxuXHJcbiAgICAgICAgdGhpcy51cGRhdGVUYXNrU3RvcmFnZSh0aGlzLnRhc2tzKVxyXG4gICAgfVxyXG5cclxuICAgIGRlbGV0ZVRhc2sodGFza0lkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCB0YXNrSWR4ID0gdGhpcy50YXNrcy5maW5kSW5kZXgodGFzayA9PiB0YXNrLmlkID09PSB0YXNrSWQpXHJcbiAgICAgICAgdGhpcy50YXNrcy5zcGxpY2UodGFza0lkeCwgMSlcclxuICAgICAgICB0aGlzLnVwZGF0ZUxpc3RlbmVycygpXHJcbiAgICAgICAgdXNlck1lc3NhZ2UucmVuZGVyTWVzc2FnZShgVGFzayBSZW1vdmVkIFN1Y2Nlc3NmdWxseWApXHJcblxyXG4gICAgICAgIHRoaXMudXBkYXRlVGFza1N0b3JhZ2UodGhpcy50YXNrcylcclxuICAgIH1cclxuXHJcbiAgICBtb3ZlVGFzayh0YXNrSWQ6IHN0cmluZywgbmV3U3RhdHVzOiBUYXNrU3RhdHVzKSB7XHJcbiAgICAgICAgY29uc3QgdGFzayA9IHRoaXMudGFza3MuZmluZChwcmogPT4gcHJqLmlkID09PSB0YXNrSWQpXHJcbiAgICAgICAgaWYgKHRhc2sgJiYgdGFzay5zdGF0dXMgIT09IG5ld1N0YXR1cykge1xyXG4gICAgICAgICAgICB0YXNrLnN0YXR1cyA9IG5ld1N0YXR1c1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUxpc3RlbmVycygpXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVGFza1N0b3JhZ2UodGhpcy50YXNrcylcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlTGlzdGVuZXJzKCkge1xyXG4gICAgICAgIGZvciAoY29uc3QgbGlzdGVuZXJGdW5jIG9mIHRoaXMubGlzdGVuZXJzKSB7XHJcbiAgICAgICAgICAgIGxpc3RlbmVyRnVuYyh0aGlzLnRhc2tzLnNsaWNlKCkpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdXBkYXRlVGFza1N0b3JhZ2UoZGF0YTogVGFza1tdKSB7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlU2VydmljZS5zYXZlVG9TdG9yYWdlKHRoaXMuU1RPUkFHRV9LRVksIGRhdGEpXHJcbiAgICB9XHJcbiAgICBcclxuICAgIHByaXZhdGUgZGVtb1Rhc2tzOiBUYXNrW10gPSBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBpZDogbWFrZUlkKCksXHJcbiAgICAgICAgICAgIHRpdGxlOiBgQ3JlYXRlIHlvdXIgZmlyc3QgdGFza2AsXHJcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBgQ2hlY2sgaXQgb3V0IWAsXHJcbiAgICAgICAgICAgIHByaW9yaXR5OiAxLFxyXG4gICAgICAgICAgICBzdGF0dXM6IFRhc2tTdGF0dXMuQWN0aXZlLFxyXG4gICAgICAgICAgICBjcmVhdGVkQXQ6IERhdGUubm93KClcclxuICAgICAgICB9XHJcbiAgICBdXHJcbn1cclxuZXhwb3J0IGNvbnN0IHRhc2tTdGF0ZSA9IFRhc2tTdGF0ZS5nZXRJbnN0YW5jZSgpIiwiaW1wb3J0IHsgVmFsaWRhdGFibGUgfSBmcm9tIFwiLi4vdXRpbC92YWxpZGF0aW9uXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBWYWxpZGF0aW9uQ3JpdGVyaWEge1xyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHVibGljIGVudGVyZWRUaXRsZTogc3RyaW5nLCBcclxuICAgICAgICBwdWJsaWMgZW50ZXJlZERlc2NyaXB0aW9uOiBzdHJpbmcsIFxyXG4gICAgICAgIHB1YmxpYyBlbnRlcmVkcHJpb3JpdHk6IG51bWJlcikgeyB9XHJcblxyXG4gICAgdGl0bGVWYWxpZGF0YWJsZTogVmFsaWRhdGFibGUgPSB7XHJcbiAgICAgICAgZmllbGQ6IGB0aXRsZWAsXHJcbiAgICAgICAgdmFsdWU6IHRoaXMuZW50ZXJlZFRpdGxlLFxyXG4gICAgICAgIGlzUmVxdWlyZWQ6IHRydWUsXHJcbiAgICB9XHJcbiAgICBkZXNjcmlwdGlvblZhbGlkYXRhYmxlOiBWYWxpZGF0YWJsZSA9IHtcclxuICAgICAgICBmaWVsZDogYGRlc2NyaXB0aW9uYCxcclxuICAgICAgICB2YWx1ZTogdGhpcy5lbnRlcmVkRGVzY3JpcHRpb24sXHJcbiAgICAgICAgaXNSZXF1aXJlZDogdHJ1ZSxcclxuICAgICAgICBtaW5MZW5ndGg6IDVcclxuICAgIH1cclxuICAgIHByaW9yaXR5VmFsaWRhdGFibGU6IFZhbGlkYXRhYmxlID0ge1xyXG4gICAgICAgIGZpZWxkOiBgcHJpb3JpdHlgLFxyXG4gICAgICAgIHZhbHVlOiB0aGlzLmVudGVyZWRwcmlvcml0eSxcclxuICAgICAgICBpc1JlcXVpcmVkOiB0cnVlLFxyXG4gICAgICAgIG1pbjogMSxcclxuICAgICAgICBtYXg6IDVcclxuICAgIH1cclxufSIsIi8vIFRPRE86IHJldHVybiBhIFRhc2tcclxuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIi4vYmFzZS1jb21wb25lbnRcIlxyXG5pbXBvcnQgeyB2YWxpZGF0ZSB9IGZyb20gXCIuLi91dGlsL3ZhbGlkYXRpb25cIlxyXG5pbXBvcnQgeyBBdXRvYmluZCB9IGZyb20gXCIuLi9kZWNvcmF0b3JzL2F1dG9iaW5kXCJcclxuaW1wb3J0IHsgdGFza1N0YXRlIH0gZnJvbSBcIi4uL3N0YXRlL3Rhc2stc3RhdGVcIlxyXG5pbXBvcnQgeyBUYXNrLCBUYXNrU3RhdHVzIH0gZnJvbSBcIi4uL21vZGVscy90YXNrXCJcclxuaW1wb3J0IHsgVmFsaWRhdGlvbkNyaXRlcmlhIH0gZnJvbSBcIi4uL21vZGVscy92YWxpZGF0aW9uLWNyaXRlcmlhXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBUYXNrSW5wdXQgZXh0ZW5kcyBDb21wb25lbnQ8SFRNTERpdkVsZW1lbnQsIEhUTUxGb3JtRWxlbWVudD4ge1xyXG4gICAgLy9pbnB1dCBmaWVsZHNcclxuICAgIHRpdGxlSW5wdXRFbDogSFRNTElucHV0RWxlbWVudFxyXG4gICAgZGVzY3JpcHRpb25JbnB1dEVsOiBIVE1MSW5wdXRFbGVtZW50XHJcbiAgICBwcmlvcml0eUlucHV0RWw6IEhUTUxJbnB1dEVsZW1lbnRcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcihgdGFzay1pbnB1dGAsIGB0YXNrLWZvcm0td3JhcGVyYCwgdHJ1ZSwgYHVzZXItaW5wdXRgKVxyXG4gICAgICAgIC8vIHNlbGVjdGlvbiBsb2dpY1xyXG4gICAgICAgIHRoaXMudGl0bGVJbnB1dEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCN0aXRsZWApIGFzIEhUTUxJbnB1dEVsZW1lbnRcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uSW5wdXRFbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjZGVzY3JpcHRpb25gKSBhcyBIVE1MSW5wdXRFbGVtZW50XHJcbiAgICAgICAgdGhpcy5wcmlvcml0eUlucHV0RWwgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgI3ByaW9yaXR5YCkgYXMgSFRNTElucHV0RWxlbWVudFxyXG5cclxuICAgICAgICB0aGlzLmNvbmZpZ3VyZSgpXHJcbiAgICB9XHJcblxyXG4gICAgY29uZmlndXJlKCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBzdWJtaXRgLCB0aGlzLnN1Ym1pdEhhbmRsZXIpXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBnYXRoZXJVc2VySW5wdXQoKTogVGFzayB8IHZvaWQge1xyXG4gICAgICAgIGNvbnN0IGVudGVyZWRUaXRsZSA9IHRoaXMudGl0bGVJbnB1dEVsLnZhbHVlXHJcbiAgICAgICAgY29uc3QgZW50ZXJlZERlc2NyaXB0aW9uID0gdGhpcy5kZXNjcmlwdGlvbklucHV0RWwudmFsdWVcclxuICAgICAgICBjb25zdCBlbnRlcmVkcHJpb3JpdHkgPSArdGhpcy5wcmlvcml0eUlucHV0RWwudmFsdWVcclxuICAgICAgICAvLyBpbnB1dCB2YWxpZGF0aW9uIGNyaXRlcmlhXHJcbiAgICAgICAgY29uc3QgdmFsaWRhdGlvbkNyaXRlcmlhID0gbmV3IFZhbGlkYXRpb25Dcml0ZXJpYShlbnRlcmVkVGl0bGUsIGVudGVyZWREZXNjcmlwdGlvbiwgZW50ZXJlZHByaW9yaXR5KSAgICAgICAgXHJcbiAgICAgICAgY29uc3Qge3RpdGxlVmFsaWRhdGFibGUsIGRlc2NyaXB0aW9uVmFsaWRhdGFibGUsIHByaW9yaXR5VmFsaWRhdGFibGV9ID0gdmFsaWRhdGlvbkNyaXRlcmlhXHJcbiAgICAgICAgLy8gaW5wdXQgdmFsaWRhdGlvblxyXG4gICAgICAgIGlmICh2YWxpZGF0ZSh0aXRsZVZhbGlkYXRhYmxlKSAmJlxyXG4gICAgICAgICAgICB2YWxpZGF0ZShkZXNjcmlwdGlvblZhbGlkYXRhYmxlKSAmJlxyXG4gICAgICAgICAgICB2YWxpZGF0ZShwcmlvcml0eVZhbGlkYXRhYmxlKSkge1xyXG4gICAgICAgICAgICB0aGlzLmNsZWFySW5wdXRzKClcclxuICAgICAgICAgICAgcmV0dXJuIG5ldyBUYXNrKGVudGVyZWRUaXRsZSwgZW50ZXJlZERlc2NyaXB0aW9uLCBlbnRlcmVkcHJpb3JpdHksIFRhc2tTdGF0dXMuQWN0aXZlLCBEYXRlLm5vdygpKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGNsZWFySW5wdXRzKCkge1xyXG4gICAgICAgIHRoaXMudGl0bGVJbnB1dEVsLnZhbHVlID0gYGBcclxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uSW5wdXRFbC52YWx1ZSA9IGBgXHJcbiAgICAgICAgdGhpcy5wcmlvcml0eUlucHV0RWwudmFsdWUgPSBgYFxyXG4gICAgfVxyXG5cclxuICAgIEBBdXRvYmluZFxyXG4gICAgcHJpdmF0ZSBzdWJtaXRIYW5kbGVyKGV2OiBFdmVudCkge1xyXG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICBjb25zdCB1c2VySW5wdXQgPSB0aGlzLmdhdGhlclVzZXJJbnB1dCgpXHJcbiAgICAgICAgaWYgKHVzZXJJbnB1dCkgdGFza1N0YXRlLmFkZFRhc2sodXNlcklucHV0KVxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlckNvbnRlbnQoKTogdm9pZCB7IH1cclxufSIsImltcG9ydCB7IEF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmRcIlxyXG5pbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiLi9iYXNlLWNvbXBvbmVudFwiXHJcbmltcG9ydCB7IFRhc2sgfSBmcm9tIFwiLi4vbW9kZWxzL3Rhc2tcIlxyXG5pbXBvcnQgeyBEcmFnZ2FibGUgfSBmcm9tIFwiLi4vbW9kZWxzL2RyYWctZHJvcFwiXHJcbmltcG9ydCB7IHRhc2tTdGF0ZSB9IGZyb20gXCIuLi9zdGF0ZS90YXNrLXN0YXRlXCJcclxuaW1wb3J0IHsgZm9ybWF0RGF0ZVRpbWUgfSBmcm9tIFwiLi4vdXRpbC9mb3JtYXQtZGF0ZS10aW1lXCJcclxuXHJcbmV4cG9ydCBjbGFzcyBUYXNrSXRlbSBleHRlbmRzIENvbXBvbmVudDxIVE1MVUxpc3RFbGVtZW50LCBIVE1MTElFbGVtZW50PlxyXG4gICAgaW1wbGVtZW50cyBEcmFnZ2FibGUge1xyXG4gICAgcHJpdmF0ZSB0YXNrOiBUYXNrXHJcblxyXG4gICAgY29uc3RydWN0b3IoaG9zdElkOiBzdHJpbmcsIHRhc2s6IFRhc2spIHtcclxuICAgICAgICBzdXBlcihgc2luZ2xlLXRhc2tgLCBob3N0SWQsIGZhbHNlLCB0YXNrLmlkISlcclxuICAgICAgICB0aGlzLnRhc2sgPSB0YXNrXHJcbiAgICAgICAgdGhpcy5jb25maWd1cmUoKVxyXG4gICAgICAgIHRoaXMucmVuZGVyQ29udGVudCgpICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBAQXV0b2JpbmRcclxuICAgIGRyYWdTdGFydEhhbmRsZXIoZXY6IERyYWdFdmVudCkge1xyXG4gICAgICAgIGV2LmRhdGFUcmFuc2ZlciEuc2V0RGF0YShgdGV4dC9wbGFpbmAsIHRoaXMudGFzay5pZCEpXHJcbiAgICAgICAgZXYuZGF0YVRyYW5zZmVyIS5lZmZlY3RBbGxvd2VkID0gYG1vdmVgXHJcbiAgICB9XHJcblxyXG4gICAgY29uZmlndXJlKCkgeyAgICAgIFxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBkZWxldGUtYnRuYCkhLmlkID0gYGRlbGV0ZS1idG4tJHt0aGlzLnRhc2suaWQhfWBcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgZGVsZXRlLWJ0bi0ke3RoaXMudGFzay5pZCF9YCkhLm9uY2xpY2sgPSAoKSA9PiB0aGlzLm9uRGVsZXRlVGFzayh0aGlzLnRhc2suaWQhKVxyXG5cclxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihgZHJhZ3N0YXJ0YCwgdGhpcy5kcmFnU3RhcnRIYW5kbGVyKVxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBkcmFnZW5kYCwgdGhpcy5kcmFnRW5kSGFuZGxlcilcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXJDb250ZW50KCkge1xyXG4gICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGBoM2ApIS50ZXh0Q29udGVudCA9IHRoaXMudGFzay50aXRsZVxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGBoNGApIS50ZXh0Q29udGVudCA9IGBQcmlvcml0eTogYCArIHRoaXMudGFzay5wcmlvcml0eVxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGBoNWApIS50ZXh0Q29udGVudCA9IGZvcm1hdERhdGVUaW1lKHRoaXMudGFzay5jcmVhdGVkQXQpXHJcbiAgICAgICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYHBgKSEudGV4dENvbnRlbnQgPSB0aGlzLnRhc2suZGVzY3JpcHRpb25cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG9uRGVsZXRlVGFzayh0YXNrSWQ6IHN0cmluZykgeyAgICAgICBcclxuICAgICAgICB0YXNrU3RhdGUuZGVsZXRlVGFzayh0YXNrSWQpXHJcbiAgICB9XHJcblxyXG4gICAgZHJhZ0VuZEhhbmRsZXIoX2V2OiBEcmFnRXZlbnQpIHtcclxuICAgIH1cclxufSIsImV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlVGltZSh0aW1lc3RhbXA6IG51bWJlcil7XHJcbiAgICBjb25zdCBkYXRlID0gbmV3IERhdGUodGltZXN0YW1wKS50b0RhdGVTdHJpbmcoKVxyXG4gICAgY29uc3QgaG91cnMgPSBuZXcgRGF0ZSh0aW1lc3RhbXApLmdldEhvdXJzKClcclxuICAgIGNvbnN0IG1pbnV0ZXMgPSBuZXcgRGF0ZSh0aW1lc3RhbXApLmdldE1pbnV0ZXMoKVxyXG4gICAgY29uc3QgZm9ybWF0dGVkRGF0ZSA9IGAke2RhdGV9IGF0ICR7aG91cnN9OiR7bWludXRlc31gXHJcbiAgICByZXR1cm4gZm9ybWF0dGVkRGF0ZSAgICAgICAgXHJcbn0iLCJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiLi9iYXNlLWNvbXBvbmVudFwiXHJcbmltcG9ydCB7IEF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmRcIlxyXG5pbXBvcnQgeyB0YXNrU3RhdGUgfSBmcm9tIFwiLi4vc3RhdGUvdGFzay1zdGF0ZVwiXHJcbmltcG9ydCB7IERyYWdUYXJnZXQgfSBmcm9tIFwiLi4vbW9kZWxzL2RyYWctZHJvcFwiXHJcbmltcG9ydCB7IFRhc2ssIFRhc2tTdGF0dXMgfSBmcm9tIFwiLi4vbW9kZWxzL3Rhc2tcIlxyXG5pbXBvcnQgeyBUYXNrSXRlbSB9IGZyb20gXCIuL3Rhc2staXRlbVwiXHJcblxyXG5leHBvcnQgY2xhc3MgVGFza0xpc3QgZXh0ZW5kcyBDb21wb25lbnQ8SFRNTERpdkVsZW1lbnQsIEhUTUxFbGVtZW50PlxyXG4gICAgaW1wbGVtZW50cyBEcmFnVGFyZ2V0IHtcclxuICAgIGFzc2lnbmVkVGFza3M6IFRhc2tbXSA9IFtdXHJcbiAgICBzb3J0Qnk6IHN0cmluZyA9IGBgXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHR5cGU6IGBhY3RpdmVgIHwgYGRvbmVgKSB7XHJcbiAgICAgICAgc3VwZXIoYHRhc2stbGlzdGAsIGBsaXN0cy13cmFwZXJgLCBmYWxzZSwgYCR7dHlwZX0tdGFza3NgKVxyXG4gICAgICAgIHRoaXMuY29uZmlndXJlKClcclxuICAgICAgICAvLyBzdGF0ZSBtYW5hZ2VtZW50XHJcbiAgICAgICAgdGhpcy5yZW5kZXJDb250ZW50KClcclxuICAgICAgICB0YXNrU3RhdGUucXVlcnkoKVxyXG4gICAgfVxyXG5cclxuICAgIEBBdXRvYmluZFxyXG4gICAgZHJhZ092ZXJIYW5kbGVyKGV2OiBEcmFnRXZlbnQpIHtcclxuICAgICAgICBpZiAoZXYuZGF0YVRyYW5zZmVyICYmIGV2LmRhdGFUcmFuc2Zlci50eXBlc1swXSA9PT0gYHRleHQvcGxhaW5gKSB7XHJcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcclxuICAgICAgICAgICAgY29uc3QgbGlzdEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYHVsYCkhXHJcbiAgICAgICAgICAgIGxpc3RFbC5jbGFzc0xpc3QuYWRkKGBkcm9wcGFibGVgKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAQXV0b2JpbmRcclxuICAgIGRyb3BIYW5kbGVyKGV2OiBEcmFnRXZlbnQpIHtcclxuICAgICAgICBjb25zdCBwcmpJZCA9IGV2LmRhdGFUcmFuc2ZlciEuZ2V0RGF0YShgdGV4dC9wbGFpbmApXHJcbiAgICAgICAgdGFza1N0YXRlLm1vdmVUYXNrKHByaklkLCB0aGlzLnR5cGUgPT09IGBhY3RpdmVgID8gVGFza1N0YXR1cy5BY3RpdmUgOiBUYXNrU3RhdHVzLkRvbmUpXHJcblxyXG4gICAgICAgIGNvbnN0IGRyb3BwYWJsZUVscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJ1bFwiKVxyXG4gICAgICAgIGZvciAoY29uc3QgZWwgb2YgZHJvcHBhYmxlRWxzKSB7XHJcbiAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoYGRyb3BwYWJsZWApXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNvbmZpZ3VyZSgpIHtcclxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihgZHJhZ292ZXJgLCB0aGlzLmRyYWdPdmVySGFuZGxlcilcclxuICAgICAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihgZHJhZ2xlYXZlYCwgdGhpcy5kcmFnTGVhdmVIYW5kbGVyKVxyXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBkcm9wYCwgdGhpcy5kcm9wSGFuZGxlcilcclxuICAgICAgICAvLyBzb3J0aW5nXHJcbiAgICAgICAgY29uc3Qgc2VsZWN0RWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgc29ydGJ5YCkgYXMgSFRNTFNlbGVjdEVsZW1lbnRcclxuICAgICAgICBzZWxlY3RFbCEuaWQgPSBgc29ydGJ5LSR7dGhpcy50eXBlfWBcclxuICAgICAgICB0aGlzLnNvcnRCeSA9IHNlbGVjdEVsLnZhbHVlXHJcbiAgICAgICAgc2VsZWN0RWwuYWRkRXZlbnRMaXN0ZW5lcihgY2hhbmdlYCwgKCkgPT4gdGhpcy5oYW5kbGVTb3J0YnlDaGFuZ2Uoc2VsZWN0RWwudmFsdWUpKVxyXG4gICAgICAgIC8vIHN0YXRlIG1hbmFnZW1lbnRcclxuICAgICAgICB0YXNrU3RhdGUuYWRkTGlzdGVuZXIodGhpcy5yZW5kZXJGaWx0ZXJkVGFza3MpXHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyQ29udGVudCgpIHtcclxuICAgICAgICBjb25zdCBsaXN0SWQgPSBgJHt0aGlzLnR5cGV9LXRhc2stbGlzdGBcclxuICAgICAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgdWxgKSEuaWQgPSBsaXN0SWRcclxuICAgICAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgaDJgKSEudGV4dENvbnRlbnQgPSB0aGlzLnR5cGUudG9VcHBlckNhc2UoKVxyXG4gICAgfVxyXG5cclxuICAgIEBBdXRvYmluZFxyXG4gICAgcmVuZGVyRmlsdGVyZFRhc2tzKHRhc2tzOiBUYXNrW10pIHtcclxuICAgICAgICBjb25zdCBmaWx0ZXJlZFRhc2tzID0gdGFza3MuZmlsdGVyKChwcmopID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PT0gYGFjdGl2ZWApIHJldHVybiBwcmouc3RhdHVzID09PSBUYXNrU3RhdHVzLkFjdGl2ZVxyXG4gICAgICAgICAgICByZXR1cm4gcHJqLnN0YXR1cyA9PT0gVGFza1N0YXR1cy5Eb25lXHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLmFzc2lnbmVkVGFza3MgPSBmaWx0ZXJlZFRhc2tzXHJcbiAgICAgICAgdGhpcy5yZW5kZXJUYXNrcygpXHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZW5kZXJUYXNrcygpIHtcclxuICAgICAgICBjb25zdCBsaXN0RWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHt0aGlzLnR5cGV9LXRhc2stbGlzdGApISBhcyBIVE1MVUxpc3RFbGVtZW50XHJcbiAgICAgICAgbGlzdEVsLmlubmVySFRNTCA9IGBgXHJcbiAgICAgICAgLy9zb3J0aW5nXHJcbiAgICAgICAgY29uc3Qgc29ydGVkVGFza3MgPSB0aGlzLmFzc2lnbmVkVGFza3Muc29ydCgoYSwgYikgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zb3J0QnkgPT09IGBwcmlvcml0eWApIHJldHVybiBhLnByaW9yaXR5IC0gYi5wcmlvcml0eVxyXG4gICAgICAgICAgICByZXR1cm4gYi5jcmVhdGVkQXQgLSBhLmNyZWF0ZWRBdFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLy8gcmVuZGVyaW5nXHJcbiAgICAgICAgZm9yIChjb25zdCBwcmpJdGVtIG9mIHNvcnRlZFRhc2tzKSB7XHJcbiAgICAgICAgICAgIG5ldyBUYXNrSXRlbSh0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgdWxgKSEuaWQsIHByakl0ZW0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgaGFuZGxlU29ydGJ5Q2hhbmdlKHZhbDogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5zb3J0QnkgPSB2YWxcclxuICAgICAgICB0aGlzLnJlbmRlclRhc2tzKClcclxuICAgIH1cclxuXHJcbiAgICBkcmFnTGVhdmVIYW5kbGVyKF9ldjogRHJhZ0V2ZW50KSB7IH1cclxufSIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tYWluLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBUYXNrSW5wdXQgfSBmcm9tIFwiLi9jb21wb25lbnRzL3Rhc2staW5wdXRcIlxyXG5pbXBvcnQgeyBUYXNrTGlzdCB9IGZyb20gXCIuL2NvbXBvbmVudHMvdGFzay1saXN0XCJcclxuaW1wb3J0IFwiLi9tYWluLmNzc1wiXHJcblxyXG5jb25zb2xlLmxvZygnYXBwLnRzIFdvcmtpbmcnKVxyXG4vLyBJTlNUQU5USUFUSU9OXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZygnRE9NIExvYWRlZCcpXHJcbiAgICBuZXcgVGFza0lucHV0KCk7XHJcbiAgICBuZXcgVGFza0xpc3QoJ2FjdGl2ZScpO1xyXG4gICAgbmV3IFRhc2tMaXN0KCdkb25lJyk7XHJcbn0pOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImkiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInRlbXBsYXRlSUQiLCJob3N0RWxJZCIsImluc2VydEF0U3RhcnQiLCJuZXdFbElkIiwidGVtcGxhdGVFbCIsImdldEVsZW1lbnRCeUlkIiwiaG9zdEVsIiwiaW1wb3J0ZWROb2RlIiwiaW1wb3J0Tm9kZSIsImZpcnN0RWxlbWVudENoaWxkIiwiYXR0YWNoIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiVXNlck1lc3NhZ2UiLCJzdXBlciIsIm1lc3NhZ2UiLCJzdGF0aWMiLCJpbnN0YW5jZSIsImNvbmZpZ3VyZSIsInJlbmRlckNvbnRlbnQiLCJyZW5kZXJNZXNzYWdlIiwibWVzc2FnZUVsIiwiaW5uZXJUZXh0IiwibWVzc2FnZVdyYXBwZXJFbCIsImNsYXNzTGlzdCIsImFkZCIsInNldFRpbWVvdXQiLCJ1c2VyTWVzc2FnZSIsImdldEluc3RhbmNlIiwidmFsaWRhdGUiLCJ2YWxpZGF0aW9uSW5wdXQiLCJpc1ZhbGlkIiwidmFsdWUiLCJmaWVsZCIsImlzUmVxdWlyZWQiLCJtaW5MZW5ndGgiLCJtYXhMZW5ndGgiLCJtaW4iLCJtYXgiLCJ0cmltIiwiQXV0b2JpbmQiLCJfMSIsIl8yIiwiZGVzY3JpcHRvciIsIm9yaWdpbmFsTWV0aG9kIiwiY29uZmlndXJhYmxlIiwiYmluZCIsIlRhc2tTdGF0dXMiLCJUYXNrIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInByaW9yaXR5Iiwic3RhdHVzIiwiY3JlYXRlZEF0IiwiTG9jYWxTdG9yYWdlU2VydmljZSIsInNhdmVUb1N0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwibG9hZEZyb21TdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlIiwibG9jYWxTdG9yYWdlU2VydmljZSIsIm1ha2VJZCIsInR4dCIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInBvc3NpYmxlIiwicmFuZG9tIiwiU3RhdGUiLCJsaXN0ZW5lcnMiLCJhZGRMaXN0ZW5lciIsImxpc3RlbmVyRnVuYyIsIlRhc2tTdGF0ZSIsInRhc2tzIiwiU1RPUkFHRV9LRVkiLCJkZW1vVGFza3MiLCJBY3RpdmUiLCJEYXRlIiwibm93IiwicXVlcnkiLCJ1cGRhdGVUYXNrU3RvcmFnZSIsInVwZGF0ZUxpc3RlbmVycyIsImFkZFRhc2siLCJuZXdUYXNrIiwiZGVsZXRlVGFzayIsInRhc2tJZCIsInRhc2tJZHgiLCJmaW5kSW5kZXgiLCJ0YXNrIiwibW92ZVRhc2siLCJuZXdTdGF0dXMiLCJmaW5kIiwicHJqIiwic2xpY2UiLCJ0YXNrU3RhdGUiLCJWYWxpZGF0aW9uQ3JpdGVyaWEiLCJlbnRlcmVkVGl0bGUiLCJlbnRlcmVkRGVzY3JpcHRpb24iLCJlbnRlcmVkcHJpb3JpdHkiLCJ0aXRsZVZhbGlkYXRhYmxlIiwiZGVzY3JpcHRpb25WYWxpZGF0YWJsZSIsInByaW9yaXR5VmFsaWRhdGFibGUiLCJUYXNrSW5wdXQiLCJ0aXRsZUlucHV0RWwiLCJkZXNjcmlwdGlvbklucHV0RWwiLCJwcmlvcml0eUlucHV0RWwiLCJhZGRFdmVudExpc3RlbmVyIiwic3VibWl0SGFuZGxlciIsImdhdGhlclVzZXJJbnB1dCIsInZhbGlkYXRpb25Dcml0ZXJpYSIsImNsZWFySW5wdXRzIiwiZXYiLCJwcmV2ZW50RGVmYXVsdCIsInVzZXJJbnB1dCIsIlRhc2tJdGVtIiwiaG9zdElkIiwiZHJhZ1N0YXJ0SGFuZGxlciIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJlZmZlY3RBbGxvd2VkIiwib25jbGljayIsIm9uRGVsZXRlVGFzayIsImRyYWdFbmRIYW5kbGVyIiwidGltZXN0YW1wIiwidGV4dENvbnRlbnQiLCJ0b0RhdGVTdHJpbmciLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJfZXYiLCJUYXNrTGlzdCIsInR5cGUiLCJhc3NpZ25lZFRhc2tzIiwic29ydEJ5IiwiZHJhZ092ZXJIYW5kbGVyIiwidHlwZXMiLCJkcm9wSGFuZGxlciIsInByaklkIiwiZ2V0RGF0YSIsIkRvbmUiLCJkcm9wcGFibGVFbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWwiLCJkcmFnTGVhdmVIYW5kbGVyIiwic2VsZWN0RWwiLCJoYW5kbGVTb3J0YnlDaGFuZ2UiLCJyZW5kZXJGaWx0ZXJkVGFza3MiLCJsaXN0SWQiLCJ0b1VwcGVyQ2FzZSIsImZpbHRlcmVkVGFza3MiLCJmaWx0ZXIiLCJyZW5kZXJUYXNrcyIsImlubmVySFRNTCIsInNvcnRlZFRhc2tzIiwic29ydCIsImIiLCJwcmpJdGVtIiwidmFsIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=