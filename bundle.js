(()=>{"use strict";var n={729:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,"* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: 'lato', sans-serif;\n  line-height: 1.25;\n  color: var(--clr-3);\n}\n\nbody {\n  min-height: 100vh;\n  background-color: var(--clr2);\n  margin: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n  font-family: lato-bold, sans-serif;\n  margin: 0;\n  color: var(--clr4);\n  text-transform: uppercase;\n  line-height: normal;\n}\n\nh2 {\n  font-size: 1.75em;\n  margin: 1rem 0;\n}\n\np {\n  margin: 0;\n}\n\nbutton,\n.btn {\n    margin: 0;\n    font-family: lato-bold, sans-serif;\n    font-size: 1rem;\n    line-height: normal;\n    padding: 0.55em 1.3em;\n    border: 2px solid var(--clr3);\n    color: var(--clr3);\n    background-color: transparent;\n    cursor: pointer;\n    transition: background-color .3s, color .3s;\n}\n\nbutton:hover {\n    color: var(--clr1);\n    background-color: var(--clr6);\n    border-color: var(--clr1);\n}\n\n.delete-btn:hover {\n    color: var(--clr4);\n    border-color: var(--clr4);\n    background-color: transparent;\n}\n\ninput,\ntextarea {\n  font: inherit;\n  padding: 0.2rem 0.4rem;\n  width: 100%;\n  max-width: 30rem;\n  border: 1px solid var(--clr3);\n  background-color: var(--clr2);\n}\n\ninput:focus,\ntextarea:focus {\n  outline: none;\n  background-color: var(--clr1);\n}\n\n.margin-bot{\n  margin-bottom: 0.5rem;\n}","",{version:3,sources:["webpack://./src/assets/style/basics/base.css"],names:[],mappings:"AAAA;EACE,sBAAsB;AACxB;;AAEA;EACE,+BAA+B;EAC/B,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,6BAA6B;EAC7B,SAAS;AACX;;AAEA;;;;;;EAME,mBAAmB;EACnB,kCAAkC;EAClC,SAAS;EACT,kBAAkB;EAClB,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,cAAc;AAChB;;AAEA;EACE,SAAS;AACX;;AAEA;;IAEI,SAAS;IACT,kCAAkC;IAClC,eAAe;IACf,mBAAmB;IACnB,qBAAqB;IACrB,6BAA6B;IAC7B,kBAAkB;IAClB,6BAA6B;IAC7B,eAAe;IACf,2CAA2C;AAC/C;;AAEA;IACI,kBAAkB;IAClB,6BAA6B;IAC7B,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,yBAAyB;IACzB,6BAA6B;AACjC;;AAEA;;EAEE,aAAa;EACb,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,6BAA6B;EAC7B,6BAA6B;AAC/B;;AAEA;;EAEE,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;AACvB",sourcesContent:["* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: 'lato', sans-serif;\n  line-height: 1.25;\n  color: var(--clr-3);\n}\n\nbody {\n  min-height: 100vh;\n  background-color: var(--clr2);\n  margin: 0;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: normal;\n  font-family: lato-bold, sans-serif;\n  margin: 0;\n  color: var(--clr4);\n  text-transform: uppercase;\n  line-height: normal;\n}\n\nh2 {\n  font-size: 1.75em;\n  margin: 1rem 0;\n}\n\np {\n  margin: 0;\n}\n\nbutton,\n.btn {\n    margin: 0;\n    font-family: lato-bold, sans-serif;\n    font-size: 1rem;\n    line-height: normal;\n    padding: 0.55em 1.3em;\n    border: 2px solid var(--clr3);\n    color: var(--clr3);\n    background-color: transparent;\n    cursor: pointer;\n    transition: background-color .3s, color .3s;\n}\n\nbutton:hover {\n    color: var(--clr1);\n    background-color: var(--clr6);\n    border-color: var(--clr1);\n}\n\n.delete-btn:hover {\n    color: var(--clr4);\n    border-color: var(--clr4);\n    background-color: transparent;\n}\n\ninput,\ntextarea {\n  font: inherit;\n  padding: 0.2rem 0.4rem;\n  width: 100%;\n  max-width: 30rem;\n  border: 1px solid var(--clr3);\n  background-color: var(--clr2);\n}\n\ninput:focus,\ntextarea:focus {\n  outline: none;\n  background-color: var(--clr1);\n}\n\n.margin-bot{\n  margin-bottom: 0.5rem;\n}"],sourceRoot:""}]);const i=o},479:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,".flex {\n  display: flex;\n  gap: .5rem\n}\n\n/* FLEX HELPERS */\n.flex.column {\n  flex-direction: column;\n}\n\n.flex.align-center {\n  align-items: center;\n}\n\n.flex.justify-center {\n  justify-content: center;\n}\n\n.flex.space-between {\n  justify-content: space-between;\n}\n /* LIST HELPERS */\n.clean-list {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}","",{version:3,sources:["webpack://./src/assets/style/basics/helpers.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb;AACF;;AAEA,iBAAiB;AACjB;EACE,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,8BAA8B;AAChC;CACC,iBAAiB;AAClB;EACE,SAAS;EACT,UAAU;EACV,qBAAqB;AACvB",sourcesContent:[".flex {\n  display: flex;\n  gap: .5rem\n}\n\n/* FLEX HELPERS */\n.flex.column {\n  flex-direction: column;\n}\n\n.flex.align-center {\n  align-items: center;\n}\n\n.flex.justify-center {\n  justify-content: center;\n}\n\n.flex.space-between {\n  justify-content: space-between;\n}\n /* LIST HELPERS */\n.clean-list {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}"],sourceRoot:""}]);const i=o},802:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,".main-layout:not(.full) {\n  display: grid;\n  grid-template-columns: 1fr 6fr 1fr;\n}\n\n.full{\n  grid-column: 1 /-1;\n}\n\n.main-layout .content{\n  grid-column: 2;\n}\n\n.list-layout:not(.full){\n  display: grid;\n  grid-template-columns: 1rem auto 1rem;\n}\n\n.list-layout > *{\n  grid-column: 2;\n}\n\n#app main {\n  margin-block-start: 2rem;\n}","",{version:3,sources:["webpack://./src/assets/style/basics/layout.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,qCAAqC;AACvC;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE,wBAAwB;AAC1B",sourcesContent:[".main-layout:not(.full) {\n  display: grid;\n  grid-template-columns: 1fr 6fr 1fr;\n}\n\n.full{\n  grid-column: 1 /-1;\n}\n\n.main-layout .content{\n  grid-column: 2;\n}\n\n.list-layout:not(.full){\n  display: grid;\n  grid-template-columns: 1rem auto 1rem;\n}\n\n.list-layout > *{\n  grid-column: 2;\n}\n\n#app main {\n  margin-block-start: 2rem;\n}"],sourceRoot:""}]);const i=o},502:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,".headder {\n  background-color: var(--clr5);\n  box-shadow: 7px -6px 9px 0px var(--clr5);\n}\n\n.headder h1 {\n  padding: 1.5rem 0;\n  color: var(--clr6);\n}","",{version:3,sources:["webpack://./src/assets/style/components/headder.css"],names:[],mappings:"AAAA;EACE,6BAA6B;EAC7B,wCAAwC;AAC1C;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB",sourcesContent:[".headder {\n  background-color: var(--clr5);\n  box-shadow: 7px -6px 9px 0px var(--clr5);\n}\n\n.headder h1 {\n  padding: 1.5rem 0;\n  color: var(--clr6);\n}"],sourceRoot:""}]);const i=o},429:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,".task-form{\n    border: 3px solid var(--clr3);\n    padding: 1rem;\n}","",{version:3,sources:["webpack://./src/assets/style/components/task-form.css"],names:[],mappings:"AAAA;IACI,6BAA6B;IAC7B,aAAa;AACjB",sourcesContent:[".task-form{\n    border: 3px solid var(--clr3);\n    padding: 1rem;\n}"],sourceRoot:""}]);const i=o},238:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,".tasks li {\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26);\n    padding: 1rem;\n    margin-block: 1rem;\n    background: var(--clr1);\n  }\n\n  .tasks h5{\n    color: var(--clr3);\n  }","",{version:3,sources:["webpack://./src/assets/style/components/task-item.css"],names:[],mappings:"AAAA;IACI,2CAA2C;IAC3C,aAAa;IACb,kBAAkB;IAClB,uBAAuB;EACzB;;EAEA;IACE,kBAAkB;EACpB",sourcesContent:[".tasks li {\n    box-shadow: 1px 1px 8px rgba(0, 0, 0, 0.26);\n    padding: 1rem;\n    margin-block: 1rem;\n    background: var(--clr1);\n  }\n\n  .tasks h5{\n    color: var(--clr3);\n  }"],sourceRoot:""}]);const i=o},506:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,'.tasks {\n  border: 3px solid var(--clr3);\n}\n\n.tasks select {\n  height: fit-content;\n  padding: 0.5rem;\n  font-family: "lato", sans-serif;\n}\n\n.tasks ul {\n  padding: 1rem;\n}\n\n#active-tasks header {\n  background-color: var(--clr5);\n}\n#active-tasks h2 {\n  color: var(--clr6);\n}\n\n#done-tasks header {\n  background-color: var(--clr6);\n}\n\n#done-tasks h2 {\n  color: var(--clr5);\n}\n\n.droppable {\n  background: var(--clr7);\n  padding-block-start: 1rem;\n}\n\n#done-tasks .droppable {\n  background: var(--clr8);\n  padding-block-start: 1rem;\n}\n',"",{version:3,sources:["webpack://./src/assets/style/components/task-list.css"],names:[],mappings:"AAAA;EACE,6BAA6B;AAC/B;;AAEA;EACE,mBAAmB;EACnB,eAAe;EACf,+BAA+B;AACjC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,6BAA6B;AAC/B;AACA;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;EACvB,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,yBAAyB;AAC3B",sourcesContent:['.tasks {\n  border: 3px solid var(--clr3);\n}\n\n.tasks select {\n  height: fit-content;\n  padding: 0.5rem;\n  font-family: "lato", sans-serif;\n}\n\n.tasks ul {\n  padding: 1rem;\n}\n\n#active-tasks header {\n  background-color: var(--clr5);\n}\n#active-tasks h2 {\n  color: var(--clr6);\n}\n\n#done-tasks header {\n  background-color: var(--clr6);\n}\n\n#done-tasks h2 {\n  color: var(--clr5);\n}\n\n.droppable {\n  background: var(--clr7);\n  padding-block-start: 1rem;\n}\n\n#done-tasks .droppable {\n  background: var(--clr8);\n  padding-block-start: 1rem;\n}\n'],sourceRoot:""}]);const i=o},136:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,"#user-message-wraper{\n    position: fixed;\n    bottom: -20rem;\n    left: -20rem;\n    background-color: var(--clr6);\n    width: fit-content;\n    min-height: 2rem;\n    padding: 1rem;\n    transition: transform 1s ease-in-out;\n}\n\n#user-message-wraper.open{\n    transform: translate(20rem, -20rem) ;\n}\n\n#user-message-wraper h4{\n    color: var(--clr1);\n}","",{version:3,sources:["webpack://./src/assets/style/components/user-message.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,cAAc;IACd,YAAY;IACZ,6BAA6B;IAC7B,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,oCAAoC;AACxC;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:["#user-message-wraper{\n    position: fixed;\n    bottom: -20rem;\n    left: -20rem;\n    background-color: var(--clr6);\n    width: fit-content;\n    min-height: 2rem;\n    padding: 1rem;\n    transition: transform 1s ease-in-out;\n}\n\n#user-message-wraper.open{\n    transform: translate(20rem, -20rem) ;\n}\n\n#user-message-wraper h4{\n    color: var(--clr1);\n}"],sourceRoot:""}]);const i=o},852:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),s=t.n(r),a=t(645),o=t.n(a)()(s());o.push([n.id,":root {\n    --clr1: #ffffff;\n    --clr2: #fafafa;\n    --clr3: #8e8e8e;\n    --clr4: #444444;\n    --clr5: #2d302e;\n    --clr6: #0b9150;\n    --clr7: #0b91502e;\n    --clr8: #2d302e39;\n\n\n    --l: 980px;\n    --m: 860px;\n    --s: 740px;\n}","",{version:3,sources:["webpack://./src/assets/style/setup/variables.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,iBAAiB;IACjB,iBAAiB;;;IAGjB,UAAU;IACV,UAAU;IACV,UAAU;AACd",sourcesContent:[":root {\n    --clr1: #ffffff;\n    --clr2: #fafafa;\n    --clr3: #8e8e8e;\n    --clr4: #444444;\n    --clr5: #2d302e;\n    --clr6: #0b9150;\n    --clr7: #0b91502e;\n    --clr8: #2d302e39;\n\n\n    --l: 980px;\n    --m: 860px;\n    --s: 740px;\n}"],sourceRoot:""}]);const i=o},150:(n,e,t)=>{t.d(e,{Z:()=>g});var r=t(537),s=t.n(r),a=t(645),o=t.n(a),i=t(729),c=t(479),l=t(802),A=t(852),d=t(506),u=t(429),p=t(238),m=t(502),h=t(136),f=o()(s());f.i(i.Z),f.i(c.Z),f.i(l.Z),f.i(A.Z),f.i(d.Z),f.i(u.Z),f.i(p.Z),f.i(m.Z),f.i(h.Z),f.push([n.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const g=f},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,s,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&o[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),s&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=s):A[4]="".concat(s)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(s," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},o=[],i=0;i<n.length;i++){var c=n[i],l=r.base?c[0]+r.base:c[0],A=a[l]||0,d="".concat(l," ").concat(A);a[l]=A+1;var u=t(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var m=s(p,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function s(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,s){var a=r(n=n||[],s=s||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var i=t(a[o]);e[i].references--}for(var c=r(n,s),l=0;l<a.length;l++){var A=t(a[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var s=void 0!==t.layer;s&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,s&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var s=e[r];if(void 0!==s)return s.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n,e,t,r){this.templateEl=document.getElementById(n),this.hostEl=document.getElementById(e);const s=document.importNode(this.templateEl.content,!0);this.element=s.firstElementChild,r&&(this.element.id=r),this.attach(t)}attach(n){this.hostEl.insertAdjacentElement(n?"afterbegin":"beforeend",this.element)}}class e extends n{constructor(){super("user-message","app",!0),this.message=""}static getInstance(){return this.instance||(this.instance=new e),this.instance}configure(){}renderContent(){}renderMessage(n){const e=document.getElementById("message");e.innerText=n;const t=document.getElementById("user-message-wraper");t.classList.add("open"),setTimeout((()=>{e.innerText="",t.classList.remove("open")}),3e3)}}const r=e.getInstance();function s(n){let e=!0,t="Invalid Input:";const{value:s,field:a,isRequired:o,minLength:i,maxLength:c,min:l,max:A}=n;return o&&(e=e&&0!==s.toString().trim().length,t+=e?"":`\n${a} is required`),null!=i&&"string"==typeof s&&(e=e&&s.length>=i,t+=e?"":`\n${a} needs a minimun of ${i} characters`),null!=c&&"string"==typeof s&&(e=e&&s.length<=c,t+=e?"":`\n${a} can have a maximun of ${c} characters`),null!=l&&"number"==typeof s&&(e=e&&s>=l,t+=e?"":`\n${a} can have a minimun value of ${l}`),null!=A&&"number"==typeof s&&(e=e&&s<=A,t+=e?"":`\n${a} can have a maximum value of ${A}`),e||r.renderMessage(t),e}function a(n,e,t){const r=t.value;return{configurable:!0,get(){return r.bind(this)}}}var o;!function(n){n[n.Active=0]="Active",n[n.Done=1]="Done"}(o||(o={}));class i{constructor(n,e,t,r,s,a){this.title=n,this.description=e,this.priority=t,this.status=r,this.createdAt=s,this.id=a}}class c{static getInstance(){return this.instance||(this.instance=new c),this.instance}saveToStorage(n,e){const t=JSON.stringify(e);localStorage.setItem(n,t)}loadFromStorage(n){const e=localStorage.getItem(n);return e?JSON.parse(e):null}}const l=c.getInstance();function A(n=6){for(var e="",t=0;t<n;t++)e+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".charAt(Math.floor(62*Math.random()));return e}class d{constructor(){this.listeners=[]}addListener(n){this.listeners.push(n)}}class u extends d{constructor(){super(),this.tasks=[],this.STORAGE_KEY="tasksDB",this.demoTasks=[{id:A(),title:"Create your first task",description:"Check it out!",priority:1,status:o.Active,createdAt:Date.now()}]}static getInstance(){return this.instance||(this.instance=new u),this.instance}query(){this.tasks=l.loadFromStorage(this.STORAGE_KEY),this.tasks&&this.tasks.length||(this.tasks=this.demoTasks,this.updateTaskStorage(this.tasks)),this.updateListeners()}addTask(n){n.id||(n.id=A()),this.tasks.push(n),this.updateListeners(),r.renderMessage("Task Added Successfully"),this.updateTaskStorage(this.tasks)}deleteTask(n){const e=this.tasks.findIndex((e=>e.id===n));this.tasks.splice(e,1),this.updateListeners(),r.renderMessage("Task Removed Successfully"),this.updateTaskStorage(this.tasks)}moveTask(n,e){const t=this.tasks.find((e=>e.id===n));t&&t.status!==e&&(t.status=e,this.updateListeners(),this.updateTaskStorage(this.tasks))}updateListeners(){for(const n of this.listeners)n(this.tasks.slice())}updateTaskStorage(n){l.saveToStorage(this.STORAGE_KEY,n)}}const p=u.getInstance();class m{constructor(n,e,t){this.enteredTitle=n,this.enteredDescription=e,this.enteredpriority=t,this.titleValidatable={field:"title",value:this.enteredTitle,isRequired:!0},this.descriptionValidatable={field:"description",value:this.enteredDescription,isRequired:!0,minLength:5},this.priorityValidatable={field:"priority",value:this.enteredpriority,isRequired:!0,min:1,max:5}}}class h extends n{constructor(){super("task-input","task-form-wraper",!0,"user-input"),this.titleInputEl=this.element.querySelector("#title"),this.descriptionInputEl=this.element.querySelector("#description"),this.priorityInputEl=this.element.querySelector("#priority"),this.configure()}configure(){this.element.addEventListener("submit",this.submitHandler)}gatherUserInput(){const n=this.titleInputEl.value,e=this.descriptionInputEl.value,t=+this.priorityInputEl.value,r=new m(n,e,t),{titleValidatable:a,descriptionValidatable:c,priorityValidatable:l}=r;if(s(a)&&s(c)&&s(l))return this.clearInputs(),new i(n,e,t,o.Active,Date.now())}clearInputs(){this.titleInputEl.value="",this.descriptionInputEl.value="",this.priorityInputEl.value=""}submitHandler(n){n.preventDefault();const e=this.gatherUserInput();e&&p.addTask(e)}renderContent(){}}!function(n,e,t,r){var s,a=arguments.length,o=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,e,t,r);else for(var i=n.length-1;i>=0;i--)(s=n[i])&&(o=(a<3?s(o):a>3?s(e,t,o):s(e,t))||o);a>3&&o&&Object.defineProperty(e,t,o)}([a],h.prototype,"submitHandler",null);class f extends n{constructor(n,e){super("single-task",n,!1,e.id),this.task=e,this.configure(),this.renderContent()}dragStartHandler(n){n.dataTransfer.setData("text/plain",this.task.id),n.dataTransfer.effectAllowed="move"}configure(){document.getElementById("delete-btn").id=`delete-btn-${this.task.id}`,document.getElementById(`delete-btn-${this.task.id}`).onclick=()=>this.onDeleteTask(this.task.id),this.element.addEventListener("dragstart",this.dragStartHandler),this.element.addEventListener("dragend",this.dragEndHandler)}renderContent(){var n;this.element.querySelector("h3").textContent=this.task.title,this.element.querySelector("h4").textContent="Priority: "+this.task.priority,this.element.querySelector("h5").textContent=(n=this.task.createdAt,`${new Date(n).toDateString()} at ${new Date(n).getHours()}:${new Date(n).getMinutes()}`),this.element.querySelector("p").textContent=this.task.description}onDeleteTask(n){p.deleteTask(n)}dragEndHandler(n){}}!function(n,e,t,r){var s,a=arguments.length,o=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,e,t,r);else for(var i=n.length-1;i>=0;i--)(s=n[i])&&(o=(a<3?s(o):a>3?s(e,t,o):s(e,t))||o);a>3&&o&&Object.defineProperty(e,t,o)}([a],f.prototype,"dragStartHandler",null);var g=function(n,e,t,r){var s,a=arguments.length,o=a<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(n,e,t,r);else for(var i=n.length-1;i>=0;i--)(s=n[i])&&(o=(a<3?s(o):a>3?s(e,t,o):s(e,t))||o);return a>3&&o&&Object.defineProperty(e,t,o),o};class C extends n{constructor(n){super("task-list","lists-wraper",!1,`${n}-tasks`),this.type=n,this.assignedTasks=[],this.sortBy="",this.configure(),this.renderContent(),p.query()}dragOverHandler(n){n.dataTransfer&&"text/plain"===n.dataTransfer.types[0]&&(n.preventDefault(),this.element.querySelector("ul").classList.add("droppable"))}dropHandler(n){const e=n.dataTransfer.getData("text/plain");p.moveTask(e,"active"===this.type?o.Active:o.Done);const t=document.querySelectorAll("ul");for(const n of t)n.classList.remove("droppable")}configure(){this.element.addEventListener("dragover",this.dragOverHandler),this.element.addEventListener("dragleave",this.dragLeaveHandler),this.element.addEventListener("drop",this.dropHandler);const n=document.getElementById("sortby");n.id=`sortby-${this.type}`,this.sortBy=n.value,n.addEventListener("change",(()=>this.handleSortbyChange(n.value))),p.addListener(this.renderFilterdTasks)}renderContent(){const n=`${this.type}-task-list`;this.element.querySelector("ul").id=n,this.element.querySelector("h2").textContent=this.type.toUpperCase()}renderFilterdTasks(n){const e=n.filter((n=>"active"===this.type?n.status===o.Active:n.status===o.Done));this.assignedTasks=e,this.renderTasks()}renderTasks(){document.getElementById(`${this.type}-task-list`).innerHTML="";const n=this.assignedTasks.sort(((n,e)=>"priority"===this.sortBy?n.priority-e.priority:e.createdAt-n.createdAt));for(const e of n)new f(this.element.querySelector("ul").id,e)}handleSortbyChange(n){this.sortBy=n,this.renderTasks()}dragLeaveHandler(n){}}g([a],C.prototype,"dragOverHandler",null),g([a],C.prototype,"dropHandler",null),g([a],C.prototype,"renderFilterdTasks",null);var v=t(379),B=t.n(v),E=t(795),b=t.n(E),y=t(569),k=t.n(y),x=t(565),I=t.n(x),w=t(216),S=t.n(w),T=t(589),L=t.n(T),R=t(150),j={};j.styleTagTransform=L(),j.setAttributes=I(),j.insert=k().bind(null,"head"),j.domAPI=b(),j.insertStyleElement=S(),B()(R.Z,j),R.Z&&R.Z.locals&&R.Z.locals,console.log("app.ts Working"),document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM Loaded"),new h,new C("active"),new C("done")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUtzUSxhQUNULENBRVFBLGNBQ1d6TSxTQUFTd0QsZUFBZSxHQUFHckgsS0FBS2tQLGtCQUN4Q3FCLFVBQVksR0FFbkIsTUFBTUMsRUFBY3hRLEtBQUttUCxjQUFjc0IsTUFBSyxDQUFDeEssRUFBR3lLLElBQ3hCLGFBQWhCMVEsS0FBS29QLE9BQThCbkosRUFBRWlFLFNBQVd3RyxFQUFFeEcsU0FDL0N3RyxFQUFFdEcsVUFBWW5FLEVBQUVtRSxZQUczQixJQUFLLE1BQU11RyxLQUFXSCxFQUNsQixJQUFJdEMsRUFBU2xPLEtBQUt1RSxRQUFRVCxjQUFjLE1BQU9wRSxHQUFJaVIsRUFFM0QsQ0FFUVgsbUJBQW1CWSxHQUN2QjVRLEtBQUtvUCxPQUFTd0IsRUFDZDVRLEtBQUtzUSxhQUNULENBRUFSLGlCQUFpQmQsR0FBa0IsRUFuRW5DLEdBREN6RixHLG9DQVVELEdBRENBLEcsZ0NBK0JELEdBRENBLEcsZ0tDL0NEeEgsRUFBVSxDQUFDLEVBRWZBLEVBQVFnRCxrQkFBb0IsSUFDNUJoRCxFQUFRMEMsY0FBZ0IsSUFFbEIxQyxFQUFRMEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MxQixFQUFRZSxPQUFTLElBQ2pCZixFQUFRK0MsbUJBQXFCLElBRWhCLElBQUksSUFBUy9DLEdBS0osS0FBVyxZQUFpQixXQ3RCbEQ4TyxRQUFRQyxJQUFJLGtCQUVaak4sU0FBUzZKLGlCQUFpQixvQkFBb0IsS0FDMUNtRCxRQUFRQyxJQUFJLGNBQ1osSUFBSXhELEVBQ0osSUFBSTJCLEVBQVMsVUFDYixJQUFJQSxFQUFTLE9BQU8sRyIsInNvdXJjZXMiOlsid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXNzZXRzL3N0eWxlL2Jhc2ljcy9iYXNlLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvaGVscGVycy5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvYmFzaWNzL2xheW91dC5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy9oZWFkZGVyLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2stZm9ybS5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWl0ZW0uY3NzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvdGFzay1saXN0LmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3VzZXItbWVzc2FnZS5jc3MiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9hc3NldHMvc3R5bGUvc2V0dXAvdmFyaWFibGVzLmNzcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL21haW4uY3NzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9jb21wb25lbnRzL2Jhc2UtY29tcG9uZW50LnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvY29tcG9uZW50cy91c2VyLW1lc3NhZ2UudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy91dGlsL3ZhbGlkYXRpb24udHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9kZWNvcmF0b3JzL2F1dG9iaW5kLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvbW9kZWxzL3Rhc2sudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9zZXJ2aWNlcy9zdG9yYWdlLXNlcnZpY2UudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy91dGlsL21ha2VJZC50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL3N0YXRlL3Rhc2stc3RhdGUudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9tb2RlbHMvdmFsaWRhdGlvbi1jcml0ZXJpYS50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvdGFzay1pbnB1dC50cyIsIndlYnBhY2s6Ly90YXNrLW1hbmFnZXItZGVwbG95Ly4vc3JjL2NvbXBvbmVudHMvdGFzay1pdGVtLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvdXRpbC9mb3JtYXQtZGF0ZS10aW1lLnRzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvY29tcG9uZW50cy90YXNrLWxpc3QudHMiLCJ3ZWJwYWNrOi8vdGFzay1tYW5hZ2VyLWRlcGxveS8uL3NyYy9tYWluLmNzcz9kZGQzIiwid2VicGFjazovL3Rhc2stbWFuYWdlci1kZXBsb3kvLi9zcmMvYXBwLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5odG1sIHtcXG4gIGZvbnQtZmFtaWx5OiAnbGF0bycsIHNhbnMtc2VyaWY7XFxuICBsaW5lLWhlaWdodDogMS4yNTtcXG4gIGNvbG9yOiB2YXIoLS1jbHItMyk7XFxufVxcblxcbmJvZHkge1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIyKTtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxuaDUsXFxuaDYge1xcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gIGZvbnQtZmFtaWx5OiBsYXRvLWJvbGQsIHNhbnMtc2VyaWY7XFxuICBtYXJnaW46IDA7XFxuICBjb2xvcjogdmFyKC0tY2xyNCk7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG59XFxuXFxuaDIge1xcbiAgZm9udC1zaXplOiAxLjc1ZW07XFxuICBtYXJnaW46IDFyZW0gMDtcXG59XFxuXFxucCB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbmJ1dHRvbixcXG4uYnRuIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LWZhbWlseTogbGF0by1ib2xkLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICAgIHBhZGRpbmc6IDAuNTVlbSAxLjNlbTtcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY2xyMyk7XFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MsIGNvbG9yIC4zcztcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY29sb3I6IHZhcigtLWNscjEpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jbHIxKTtcXG59XFxuXFxuLmRlbGV0ZS1idG46aG92ZXIge1xcbiAgICBjb2xvcjogdmFyKC0tY2xyNCk7XFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2xyNCk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG5pbnB1dCxcXG50ZXh0YXJlYSB7XFxuICBmb250OiBpbmhlcml0O1xcbiAgcGFkZGluZzogMC4ycmVtIDAuNHJlbTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWF4LXdpZHRoOiAzMHJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNscjMpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyMik7XFxufVxcblxcbmlucHV0OmZvY3VzLFxcbnRleHRhcmVhOmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIxKTtcXG59XFxuXFxuLm1hcmdpbi1ib3R7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvYmFzaWNzL2Jhc2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsK0JBQStCO0VBQy9CLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsNkJBQTZCO0VBQzdCLFNBQVM7QUFDWDs7QUFFQTs7Ozs7O0VBTUUsbUJBQW1CO0VBQ25CLGtDQUFrQztFQUNsQyxTQUFTO0VBQ1Qsa0JBQWtCO0VBQ2xCLHlCQUF5QjtFQUN6QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTs7SUFFSSxTQUFTO0lBQ1Qsa0NBQWtDO0lBQ2xDLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLDZCQUE2QjtJQUM3QixrQkFBa0I7SUFDbEIsNkJBQTZCO0lBQzdCLGVBQWU7SUFDZiwyQ0FBMkM7QUFDL0M7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsNkJBQTZCO0lBQzdCLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsNkJBQTZCO0FBQ2pDOztBQUVBOztFQUVFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsV0FBVztFQUNYLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsNkJBQTZCO0FBQy9COztBQUVBOztFQUVFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG5cXG5odG1sIHtcXG4gIGZvbnQtZmFtaWx5OiAnbGF0bycsIHNhbnMtc2VyaWY7XFxuICBsaW5lLWhlaWdodDogMS4yNTtcXG4gIGNvbG9yOiB2YXIoLS1jbHItMyk7XFxufVxcblxcbmJvZHkge1xcbiAgbWluLWhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIyKTtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxuaDUsXFxuaDYge1xcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcXG4gIGZvbnQtZmFtaWx5OiBsYXRvLWJvbGQsIHNhbnMtc2VyaWY7XFxuICBtYXJnaW46IDA7XFxuICBjb2xvcjogdmFyKC0tY2xyNCk7XFxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcXG59XFxuXFxuaDIge1xcbiAgZm9udC1zaXplOiAxLjc1ZW07XFxuICBtYXJnaW46IDFyZW0gMDtcXG59XFxuXFxucCB7XFxuICBtYXJnaW46IDA7XFxufVxcblxcbmJ1dHRvbixcXG4uYnRuIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBmb250LWZhbWlseTogbGF0by1ib2xkLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XFxuICAgIHBhZGRpbmc6IDAuNTVlbSAxLjNlbTtcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tY2xyMyk7XFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAuM3MsIGNvbG9yIC4zcztcXG59XFxuXFxuYnV0dG9uOmhvdmVyIHtcXG4gICAgY29sb3I6IHZhcigtLWNscjEpO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXG4gICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1jbHIxKTtcXG59XFxuXFxuLmRlbGV0ZS1idG46aG92ZXIge1xcbiAgICBjb2xvcjogdmFyKC0tY2xyNCk7XFxuICAgIGJvcmRlci1jb2xvcjogdmFyKC0tY2xyNCk7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG5pbnB1dCxcXG50ZXh0YXJlYSB7XFxuICBmb250OiBpbmhlcml0O1xcbiAgcGFkZGluZzogMC4ycmVtIDAuNHJlbTtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgbWF4LXdpZHRoOiAzMHJlbTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNscjMpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyMik7XFxufVxcblxcbmlucHV0OmZvY3VzLFxcbnRleHRhcmVhOmZvY3VzIHtcXG4gIG91dGxpbmU6IG5vbmU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHIxKTtcXG59XFxuXFxuLm1hcmdpbi1ib3R7XFxuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5mbGV4IHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IC41cmVtXFxufVxcblxcbi8qIEZMRVggSEVMUEVSUyAqL1xcbi5mbGV4LmNvbHVtbiB7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbn1cXG5cXG4uZmxleC5hbGlnbi1jZW50ZXIge1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmZsZXguanVzdGlmeS1jZW50ZXIge1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5mbGV4LnNwYWNlLWJldHdlZW4ge1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbn1cXG4gLyogTElTVCBIRUxQRVJTICovXFxuLmNsZWFuLWxpc3Qge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvaGVscGVycy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxhQUFhO0VBQ2I7QUFDRjs7QUFFQSxpQkFBaUI7QUFDakI7RUFDRSxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSw4QkFBOEI7QUFDaEM7Q0FDQyxpQkFBaUI7QUFDbEI7RUFDRSxTQUFTO0VBQ1QsVUFBVTtFQUNWLHFCQUFxQjtBQUN2QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuZmxleCB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiAuNXJlbVxcbn1cXG5cXG4vKiBGTEVYIEhFTFBFUlMgKi9cXG4uZmxleC5jb2x1bW4ge1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuLmZsZXguYWxpZ24tY2VudGVyIHtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbi5mbGV4Lmp1c3RpZnktY2VudGVyIHtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbn1cXG5cXG4uZmxleC5zcGFjZS1iZXR3ZWVuIHtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG59XFxuIC8qIExJU1QgSEVMUEVSUyAqL1xcbi5jbGVhbi1saXN0IHtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7XFxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi5tYWluLWxheW91dDpub3QoLmZ1bGwpIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciA2ZnIgMWZyO1xcbn1cXG5cXG4uZnVsbHtcXG4gIGdyaWQtY29sdW1uOiAxIC8tMTtcXG59XFxuXFxuLm1haW4tbGF5b3V0IC5jb250ZW50e1xcbiAgZ3JpZC1jb2x1bW46IDI7XFxufVxcblxcbi5saXN0LWxheW91dDpub3QoLmZ1bGwpe1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMXJlbSBhdXRvIDFyZW07XFxufVxcblxcbi5saXN0LWxheW91dCA+ICp7XFxuICBncmlkLWNvbHVtbjogMjtcXG59XFxuXFxuI2FwcCBtYWluIHtcXG4gIG1hcmdpbi1ibG9jay1zdGFydDogMnJlbTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9iYXNpY3MvbGF5b3V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixrQ0FBa0M7QUFDcEM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiLm1haW4tbGF5b3V0Om5vdCguZnVsbCkge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDZmciAxZnI7XFxufVxcblxcbi5mdWxse1xcbiAgZ3JpZC1jb2x1bW46IDEgLy0xO1xcbn1cXG5cXG4ubWFpbi1sYXlvdXQgLmNvbnRlbnR7XFxuICBncmlkLWNvbHVtbjogMjtcXG59XFxuXFxuLmxpc3QtbGF5b3V0Om5vdCguZnVsbCl7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxcmVtIGF1dG8gMXJlbTtcXG59XFxuXFxuLmxpc3QtbGF5b3V0ID4gKntcXG4gIGdyaWQtY29sdW1uOiAyO1xcbn1cXG5cXG4jYXBwIG1haW4ge1xcbiAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAycmVtO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXG4gIGJveC1zaGFkb3c6IDdweCAtNnB4IDlweCAwcHggdmFyKC0tY2xyNSk7XFxufVxcblxcbi5oZWFkZGVyIGgxIHtcXG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xcbiAgY29sb3I6IHZhcigtLWNscjYpO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvaGVhZGRlci5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSw2QkFBNkI7RUFDN0Isd0NBQXdDO0FBQzFDOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuaGVhZGRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXG4gIGJveC1zaGFkb3c6IDdweCAtNnB4IDlweCAwcHggdmFyKC0tY2xyNSk7XFxufVxcblxcbi5oZWFkZGVyIGgxIHtcXG4gIHBhZGRpbmc6IDEuNXJlbSAwO1xcbiAgY29sb3I6IHZhcigtLWNscjYpO1xcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFzay1mb3Jte1xcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2stZm9ybS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7SUFDSSw2QkFBNkI7SUFDN0IsYUFBYTtBQUNqQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIudGFzay1mb3Jte1xcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiLnRhc2tzIGxpIHtcXG4gICAgYm94LXNoYWRvdzogMXB4IDFweCA4cHggcmdiYSgwLCAwLCAwLCAwLjI2KTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgbWFyZ2luLWJsb2NrOiAxcmVtO1xcbiAgICBiYWNrZ3JvdW5kOiB2YXIoLS1jbHIxKTtcXG4gIH1cXG5cXG4gIC50YXNrcyBoNXtcXG4gICAgY29sb3I6IHZhcigtLWNscjMpO1xcbiAgfVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWl0ZW0uY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksMkNBQTJDO0lBQzNDLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsdUJBQXVCO0VBQ3pCOztFQUVBO0lBQ0Usa0JBQWtCO0VBQ3BCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50YXNrcyBsaSB7XFxuICAgIGJveC1zaGFkb3c6IDFweCAxcHggOHB4IHJnYmEoMCwgMCwgMCwgMC4yNik7XFxuICAgIHBhZGRpbmc6IDFyZW07XFxuICAgIG1hcmdpbi1ibG9jazogMXJlbTtcXG4gICAgYmFja2dyb3VuZDogdmFyKC0tY2xyMSk7XFxuICB9XFxuXFxuICAudGFza3MgaDV7XFxuICAgIGNvbG9yOiB2YXIoLS1jbHIzKTtcXG4gIH1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIudGFza3Mge1xcbiAgYm9yZGVyOiAzcHggc29saWQgdmFyKC0tY2xyMyk7XFxufVxcblxcbi50YXNrcyBzZWxlY3Qge1xcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcXG4gIHBhZGRpbmc6IDAuNXJlbTtcXG4gIGZvbnQtZmFtaWx5OiBcXFwibGF0b1xcXCIsIHNhbnMtc2VyaWY7XFxufVxcblxcbi50YXNrcyB1bCB7XFxuICBwYWRkaW5nOiAxcmVtO1xcbn1cXG5cXG4jYWN0aXZlLXRhc2tzIGhlYWRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI1KTtcXG59XFxuI2FjdGl2ZS10YXNrcyBoMiB7XFxuICBjb2xvcjogdmFyKC0tY2xyNik7XFxufVxcblxcbiNkb25lLXRhc2tzIGhlYWRlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXG59XFxuXFxuI2RvbmUtdGFza3MgaDIge1xcbiAgY29sb3I6IHZhcigtLWNscjUpO1xcbn1cXG5cXG4uZHJvcHBhYmxlIHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNscjcpO1xcbiAgcGFkZGluZy1ibG9jay1zdGFydDogMXJlbTtcXG59XFxuXFxuI2RvbmUtdGFza3MgLmRyb3BwYWJsZSB7XFxuICBiYWNrZ3JvdW5kOiB2YXIoLS1jbHI4KTtcXG4gIHBhZGRpbmctYmxvY2stc3RhcnQ6IDFyZW07XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWxpc3QuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsNkJBQTZCO0FBQy9COztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGVBQWU7RUFDZiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHVCQUF1QjtFQUN2Qix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIseUJBQXlCO0FBQzNCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi50YXNrcyB7XFxuICBib3JkZXI6IDNweCBzb2xpZCB2YXIoLS1jbHIzKTtcXG59XFxuXFxuLnRhc2tzIHNlbGVjdCB7XFxuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xcbiAgcGFkZGluZzogMC41cmVtO1xcbiAgZm9udC1mYW1pbHk6IFxcXCJsYXRvXFxcIiwgc2Fucy1zZXJpZjtcXG59XFxuXFxuLnRhc2tzIHVsIHtcXG4gIHBhZGRpbmc6IDFyZW07XFxufVxcblxcbiNhY3RpdmUtdGFza3MgaGVhZGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNscjUpO1xcbn1cXG4jYWN0aXZlLXRhc2tzIGgyIHtcXG4gIGNvbG9yOiB2YXIoLS1jbHI2KTtcXG59XFxuXFxuI2RvbmUtdGFza3MgaGVhZGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNscjYpO1xcbn1cXG5cXG4jZG9uZS10YXNrcyBoMiB7XFxuICBjb2xvcjogdmFyKC0tY2xyNSk7XFxufVxcblxcbi5kcm9wcGFibGUge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tY2xyNyk7XFxuICBwYWRkaW5nLWJsb2NrLXN0YXJ0OiAxcmVtO1xcbn1cXG5cXG4jZG9uZS10YXNrcyAuZHJvcHBhYmxlIHtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNscjgpO1xcbiAgcGFkZGluZy1ibG9jay1zdGFydDogMXJlbTtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiI3VzZXItbWVzc2FnZS13cmFwZXJ7XFxuICAgIHBvc2l0aW9uOiBmaXhlZDtcXG4gICAgYm90dG9tOiAtMjByZW07XFxuICAgIGxlZnQ6IC0yMHJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY2xyNik7XFxuICAgIHdpZHRoOiBmaXQtY29udGVudDtcXG4gICAgbWluLWhlaWdodDogMnJlbTtcXG4gICAgcGFkZGluZzogMXJlbTtcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDFzIGVhc2UtaW4tb3V0O1xcbn1cXG5cXG4jdXNlci1tZXNzYWdlLXdyYXBlci5vcGVue1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMHJlbSwgLTIwcmVtKSA7XFxufVxcblxcbiN1c2VyLW1lc3NhZ2Utd3JhcGVyIGg0e1xcbiAgICBjb2xvcjogdmFyKC0tY2xyMSk7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvY29tcG9uZW50cy91c2VyLW1lc3NhZ2UuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxZQUFZO0lBQ1osNkJBQTZCO0lBQzdCLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0QlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIjdXNlci1tZXNzYWdlLXdyYXBlcntcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBib3R0b206IC0yMHJlbTtcXG4gICAgbGVmdDogLTIwcmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jbHI2KTtcXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xcbiAgICBtaW4taGVpZ2h0OiAycmVtO1xcbiAgICBwYWRkaW5nOiAxcmVtO1xcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbiN1c2VyLW1lc3NhZ2Utd3JhcGVyLm9wZW57XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwcmVtLCAtMjByZW0pIDtcXG59XFxuXFxuI3VzZXItbWVzc2FnZS13cmFwZXIgaDR7XFxuICAgIGNvbG9yOiB2YXIoLS1jbHIxKTtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgICAtLWNscjE6ICNmZmZmZmY7XFxuICAgIC0tY2xyMjogI2ZhZmFmYTtcXG4gICAgLS1jbHIzOiAjOGU4ZThlO1xcbiAgICAtLWNscjQ6ICM0NDQ0NDQ7XFxuICAgIC0tY2xyNTogIzJkMzAyZTtcXG4gICAgLS1jbHI2OiAjMGI5MTUwO1xcbiAgICAtLWNscjc6ICMwYjkxNTAyZTtcXG4gICAgLS1jbHI4OiAjMmQzMDJlMzk7XFxuXFxuXFxuICAgIC0tbDogOTgwcHg7XFxuICAgIC0tbTogODYwcHg7XFxuICAgIC0tczogNzQwcHg7XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9hc3NldHMvc3R5bGUvc2V0dXAvdmFyaWFibGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixpQkFBaUI7OztJQUdqQixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7QUFDZFwiLFwic291cmNlc0NvbnRlbnRcIjpbXCI6cm9vdCB7XFxuICAgIC0tY2xyMTogI2ZmZmZmZjtcXG4gICAgLS1jbHIyOiAjZmFmYWZhO1xcbiAgICAtLWNscjM6ICM4ZThlOGU7XFxuICAgIC0tY2xyNDogIzQ0NDQ0NDtcXG4gICAgLS1jbHI1OiAjMmQzMDJlO1xcbiAgICAtLWNscjY6ICMwYjkxNTA7XFxuICAgIC0tY2xyNzogIzBiOTE1MDJlO1xcbiAgICAtLWNscjg6ICMyZDMwMmUzOTtcXG5cXG5cXG4gICAgLS1sOiA5ODBweDtcXG4gICAgLS1tOiA4NjBweDtcXG4gICAgLS1zOiA3NDBweDtcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfMF9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9iYXNpY3MvYmFzZS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzFfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvYmFzaWNzL2hlbHBlcnMuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL2Jhc2ljcy9sYXlvdXQuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL3NldHVwL3ZhcmlhYmxlcy5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzRfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvY29tcG9uZW50cy90YXNrLWxpc3QuY3NzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF81X19fIGZyb20gXCItIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYXNzZXRzL3N0eWxlL2NvbXBvbmVudHMvdGFzay1mb3JtLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfNl9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3Rhc2staXRlbS5jc3NcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FUX1JVTEVfSU1QT1JUXzdfX18gZnJvbSBcIi0hLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9hc3NldHMvc3R5bGUvY29tcG9uZW50cy9oZWFkZGVyLmNzc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVRfUlVMRV9JTVBPUlRfOF9fXyBmcm9tIFwiLSEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Fzc2V0cy9zdHlsZS9jb21wb25lbnRzL3VzZXItbWVzc2FnZS5jc3NcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8wX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8xX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8yX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF8zX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF80X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF81X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF82X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF83X19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLmkoX19fQ1NTX0xPQURFUl9BVF9SVUxFX0lNUE9SVF84X19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIlwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJcIixcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgYWJzdHJhY3QgY2xhc3MgQ29tcG9uZW50PFQgZXh0ZW5kcyBIVE1MRWxlbWVudCwgVSBleHRlbmRzIEhUTUxFbGVtZW50PiB7XG4gICAgdGVtcGxhdGVFbDogSFRNTFRlbXBsYXRlRWxlbWVudFxuICAgIGhvc3RFbDogVFxuICAgIGVsZW1lbnQ6IFVcblxuICAgIGNvbnN0cnVjdG9yKHRlbXBsYXRlSUQ6IHN0cmluZyxcbiAgICAgICAgaG9zdEVsSWQ6IHN0cmluZyxcbiAgICAgICAgaW5zZXJ0QXRTdGFydDogYm9vbGVhbixcbiAgICAgICAgbmV3RWxJZD86IHN0cmluZyxcbiAgICApIHtcbiAgICAgICAgXG4gICAgICAgIHRoaXMudGVtcGxhdGVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRlbXBsYXRlSUQpISBhcyBIVE1MVGVtcGxhdGVFbGVtZW50XG4gICAgICAgIHRoaXMuaG9zdEVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaG9zdEVsSWQpISBhcyBUXG4gICAgICAgIFxuICAgICAgICBjb25zdCBpbXBvcnRlZE5vZGUgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRoaXMudGVtcGxhdGVFbC5jb250ZW50LCB0cnVlKVxuICAgICAgICB0aGlzLmVsZW1lbnQgPSBpbXBvcnRlZE5vZGUuZmlyc3RFbGVtZW50Q2hpbGQgYXMgVVxuICAgICAgICBpZiAobmV3RWxJZCkgdGhpcy5lbGVtZW50LmlkID0gbmV3RWxJZFxuXG4gICAgICAgIHRoaXMuYXR0YWNoKGluc2VydEF0U3RhcnQpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBhdHRhY2goaW5zZXJ0QXRTdGFydDogYm9vbGVhbikgeyAgICAgICAgXG4gICAgICAgIHRoaXMuaG9zdEVsLmluc2VydEFkamFjZW50RWxlbWVudChpbnNlcnRBdFN0YXJ0ID8gYGFmdGVyYmVnaW5gIDogYGJlZm9yZWVuZGAsIHRoaXMuZWxlbWVudClcbiAgICB9XG5cbiAgICBhYnN0cmFjdCBjb25maWd1cmUoKTogdm9pZFxuICAgIGFic3RyYWN0IHJlbmRlckNvbnRlbnQoKTogdm9pZFxufSIsImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCIuL2Jhc2UtY29tcG9uZW50XCI7XG5cbmV4cG9ydCBjbGFzcyBVc2VyTWVzc2FnZSBleHRlbmRzIENvbXBvbmVudDxIVE1MRGl2RWxlbWVudCwgSFRNTEVsZW1lbnQ+e1xuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBVc2VyTWVzc2FnZVxuICAgIG1lc3NhZ2U6IHN0cmluZyA9IGBgXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKGB1c2VyLW1lc3NhZ2VgLCBgYXBwYCwgdHJ1ZSlcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmluc3RhbmNlKSByZXR1cm4gdGhpcy5pbnN0YW5jZVxuICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IFVzZXJNZXNzYWdlKClcbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2VcbiAgICB9XG5cbiAgICBjb25maWd1cmUoKTogdm9pZCB7IH1cblxuICAgIHJlbmRlckNvbnRlbnQoKTogdm9pZCB7fVxuXG4gICAgcmVuZGVyTWVzc2FnZShtZXNzYWdlOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZUVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYG1lc3NhZ2VgKSEgYXMgSFRNTEVsZW1lbnRcbiAgICAgICAgbWVzc2FnZUVsLmlubmVyVGV4dCA9IG1lc3NhZ2VcbiAgICAgICAgY29uc3QgbWVzc2FnZVdyYXBwZXJFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd1c2VyLW1lc3NhZ2Utd3JhcGVyJykgYXMgSFRNTEVsZW1lbnRcbiAgICAgICAgbWVzc2FnZVdyYXBwZXJFbC5jbGFzc0xpc3QuYWRkKCdvcGVuJylcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBtZXNzYWdlRWwuaW5uZXJUZXh0ID0gYGBcbiAgICAgICAgICAgIG1lc3NhZ2VXcmFwcGVyRWwuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpXG4gICAgICAgIH0sIDMwMDApXG4gICAgfVxufVxuZXhwb3J0IGNvbnN0IHVzZXJNZXNzYWdlID0gVXNlck1lc3NhZ2UuZ2V0SW5zdGFuY2UoKSIsImltcG9ydCB7IHVzZXJNZXNzYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXNlci1tZXNzYWdlXCJcblxuICAgIC8vIC0tLS0tIFZBTElEQVRJT04gLS0tLS1cbiAgICBleHBvcnQgaW50ZXJmYWNlIFZhbGlkYXRhYmxlIHtcbiAgICAgICAgZmllbGQ6IHN0cmluZ1xuICAgICAgICB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyXG4gICAgICAgIGlzUmVxdWlyZWQ/OiBib29sZWFuXG4gICAgICAgIG1pbkxlbmd0aD86IG51bWJlclxuICAgICAgICBtYXhMZW5ndGg/OiBudW1iZXJcbiAgICAgICAgbWluPzogbnVtYmVyXG4gICAgICAgIG1heD86IG51bWJlclxuICAgIH1cblxuICAgIGV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZSh2YWxpZGF0aW9uSW5wdXQ6IFZhbGlkYXRhYmxlKSB7XG4gICAgICAgIGxldCBpc1ZhbGlkID0gdHJ1ZVxuICAgICAgICBsZXQgbWVzc2FnZSA9ICdJbnZhbGlkIElucHV0OidcbiAgICAgICAgY29uc3QgeyB2YWx1ZSwgZmllbGQsIGlzUmVxdWlyZWQsIG1pbkxlbmd0aCwgbWF4TGVuZ3RoLCBtaW4sIG1heCB9ID0gdmFsaWRhdGlvbklucHV0XG4gICAgICAgIGlmIChpc1JlcXVpcmVkKSB7XG4gICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiB2YWx1ZS50b1N0cmluZygpLnRyaW0oKS5sZW5ndGggIT09IDBcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gaXNWYWxpZCA/IGBgIDogYFxcbiR7ZmllbGR9IGlzIHJlcXVpcmVkYFxuICAgICAgICB9XG4gICAgICAgIGlmIChtaW5MZW5ndGggIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IGBzdHJpbmdgKSB7XG4gICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiB2YWx1ZS5sZW5ndGggPj0gbWluTGVuZ3RoXG4gICAgICAgICAgICBtZXNzYWdlICs9IGlzVmFsaWQgPyBgYCA6IGBcXG4ke2ZpZWxkfSBuZWVkcyBhIG1pbmltdW4gb2YgJHttaW5MZW5ndGh9IGNoYXJhY3RlcnNgXG4gICAgICAgIH1cbiAgICAgICAgaWYgKG1heExlbmd0aCAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gYHN0cmluZ2ApIHtcbiAgICAgICAgICAgIGlzVmFsaWQgPSBpc1ZhbGlkICYmIHZhbHVlLmxlbmd0aCA8PSBtYXhMZW5ndGhcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gaXNWYWxpZCA/IGBgIDogYFxcbiR7ZmllbGR9IGNhbiBoYXZlIGEgbWF4aW11biBvZiAke21heExlbmd0aH0gY2hhcmFjdGVyc2BcbiAgICAgICAgfVxuICAgICAgICBpZiAobWluICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSBgbnVtYmVyYCkge1xuICAgICAgICAgICAgaXNWYWxpZCA9IGlzVmFsaWQgJiYgdmFsdWUgPj0gbWluXG4gICAgICAgICAgICBtZXNzYWdlICs9IGlzVmFsaWQgPyBgYCA6IGBcXG4ke2ZpZWxkfSBjYW4gaGF2ZSBhIG1pbmltdW4gdmFsdWUgb2YgJHttaW59YFxuICAgICAgICB9XG4gICAgICAgIGlmIChtYXggIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IGBudW1iZXJgKSB7XG4gICAgICAgICAgICBpc1ZhbGlkID0gaXNWYWxpZCAmJiB2YWx1ZSA8PSBtYXhcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gaXNWYWxpZCA/IGBgIDogYFxcbiR7ZmllbGR9IGNhbiBoYXZlIGEgbWF4aW11bSB2YWx1ZSBvZiAke21heH1gXG4gICAgICAgIH1cbiAgICAgICAgaWYoIWlzVmFsaWQpIHVzZXJNZXNzYWdlLnJlbmRlck1lc3NhZ2UobWVzc2FnZSlcbiAgICAgICAgcmV0dXJuIGlzVmFsaWRcbiAgICB9IiwiLy8gLS0tLS0gQVVUT0JJTkQgVVRJTCBERUNPUkFUT1IgLS0tLS1cbmV4cG9ydCBmdW5jdGlvbiBBdXRvYmluZChfMTogYW55LCBfMjogc3RyaW5nLCBkZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IpIHtcbiAgICBjb25zdCBvcmlnaW5hbE1ldGhvZCA9IGRlc2NyaXB0b3IudmFsdWVcbiAgICBjb25zdCBhZGpEZXNjcmlwdG9yOiBQcm9wZXJ0eURlc2NyaXB0b3IgPSB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgLy8gZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIGNvbnN0IGJvdW5kRnVuYyA9IG9yaWdpbmFsTWV0aG9kLmJpbmQodGhpcylcbiAgICAgICAgICAgIHJldHVybiBib3VuZEZ1bmNcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYWRqRGVzY3JpcHRvclxufSIsIiAgICBleHBvcnQgZW51bSBUYXNrU3RhdHVzIHsgQWN0aXZlLCBEb25lIH1cbiAgICBcbiAgICBleHBvcnQgY2xhc3MgVGFzayB7XG4gICAgICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICAgICAgcHVibGljIHRpdGxlOiBzdHJpbmcsXG4gICAgICAgICAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZyxcbiAgICAgICAgICAgIHB1YmxpYyBwcmlvcml0eTogbnVtYmVyLFxuICAgICAgICAgICAgcHVibGljIHN0YXR1czogVGFza1N0YXR1cyxcbiAgICAgICAgICAgIHB1YmxpYyBjcmVhdGVkQXQ6IG51bWJlcixcbiAgICAgICAgICAgIHB1YmxpYyBpZD86IHN0cmluZ1xuICAgICAgICAgICAgKSB7IH1cbiAgICB9IiwiY2xhc3MgTG9jYWxTdG9yYWdlU2VydmljZSB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IExvY2FsU3RvcmFnZVNlcnZpY2VcblxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuaW5zdGFuY2UpIHJldHVybiB0aGlzLmluc3RhbmNlXG4gICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgTG9jYWxTdG9yYWdlU2VydmljZSgpXG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlXG4gICAgfVxuXG4gICAgc2F2ZVRvU3RvcmFnZTxUPihrZXk6IHN0cmluZywgdmFsdWU6IFQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSlcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgZGF0YSlcbiAgICAgICAgfVxuICAgIGxvYWRGcm9tU3RvcmFnZShrZXk6IHN0cmluZyl7ICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpXG4gICAgICAgICAgICBpZihkYXRhKSByZXR1cm4gSlNPTi5wYXJzZShkYXRhKVxuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuICB9XG4gIGV4cG9ydCBjb25zdCBsb2NhbFN0b3JhZ2VTZXJ2aWNlID0gTG9jYWxTdG9yYWdlU2VydmljZS5nZXRJbnN0YW5jZSgpIiwiZXhwb3J0IGZ1bmN0aW9uIG1ha2VJZChsZW5ndGggPSA2KSB7XG4gICAgdmFyIHR4dCA9ICcnXG4gICAgdmFyIHBvc3NpYmxlID0gJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5J1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICB0eHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHR4dFxufSIsImltcG9ydCB7IHVzZXJNZXNzYWdlIH0gZnJvbSBcIi4uL2NvbXBvbmVudHMvdXNlci1tZXNzYWdlXCJcbmltcG9ydCB7IFRhc2ssIFRhc2tTdGF0dXMgfSBmcm9tIFwiLi4vbW9kZWxzL3Rhc2tcIlxuaW1wb3J0IHsgbG9jYWxTdG9yYWdlU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2aWNlcy9zdG9yYWdlLXNlcnZpY2VcIlxuaW1wb3J0IHsgbWFrZUlkIH0gZnJvbSBcIi4uL3V0aWwvbWFrZUlkXCJcbi8vIFNUQVRFIE1BTkFHRU1FTlRcbnR5cGUgTGlzdGVuZXI8VD4gPSAoaXRlbXM6IFRbXSkgPT4gdm9pZFxuXG5jbGFzcyBTdGF0ZTxUPiB7XG4gICAgcHJvdGVjdGVkIGxpc3RlbmVyczogTGlzdGVuZXI8VD5bXSA9IFtdXG4gICAgYWRkTGlzdGVuZXIobGlzdGVuZXJGdW5jOiBMaXN0ZW5lcjxUPikge1xuICAgICAgICB0aGlzLmxpc3RlbmVycy5wdXNoKGxpc3RlbmVyRnVuYylcbiAgICB9XG59XG5cbmV4cG9ydCBjbGFzcyBUYXNrU3RhdGUgZXh0ZW5kcyBTdGF0ZTxUYXNrPntcbiAgICBwcml2YXRlIHRhc2tzOiBUYXNrW10gPSBbXVxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBUYXNrU3RhdGVcbiAgICBwcml2YXRlIFNUT1JBR0VfS0VZID0gJ3Rhc2tzREInXG5cbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgfVxuXG4gICAgc3RhdGljIGdldEluc3RhbmNlKCkge1xuICAgICAgICBpZiAodGhpcy5pbnN0YW5jZSkgcmV0dXJuIHRoaXMuaW5zdGFuY2VcbiAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBUYXNrU3RhdGUoKVxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZVxuICAgIH1cblxuICAgIHF1ZXJ5KCkge1xuICAgICAgICB0aGlzLnRhc2tzID0gbG9jYWxTdG9yYWdlU2VydmljZS5sb2FkRnJvbVN0b3JhZ2UodGhpcy5TVE9SQUdFX0tFWSlcbiAgICAgICAgaWYgKCF0aGlzLnRhc2tzIHx8ICF0aGlzLnRhc2tzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy50YXNrcyA9IHRoaXMuZGVtb1Rhc2tzXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRhc2tTdG9yYWdlKHRoaXMudGFza3MpXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy51cGRhdGVMaXN0ZW5lcnMoKVxuICAgIH1cblxuICAgIGFkZFRhc2sobmV3VGFzazogVGFzaykge1xuICAgICAgICBpZighbmV3VGFzay5pZCkgbmV3VGFzay5pZCA9IG1ha2VJZCgpXG4gICAgICAgIC8vIHVwZGF0ZSBzdGF0ZVxuICAgICAgICB0aGlzLnRhc2tzLnB1c2gobmV3VGFzaylcbiAgICAgICAgdGhpcy51cGRhdGVMaXN0ZW5lcnMoKVxuICAgICAgICB1c2VyTWVzc2FnZS5yZW5kZXJNZXNzYWdlKGBUYXNrIEFkZGVkIFN1Y2Nlc3NmdWxseWApXG5cbiAgICAgICAgdGhpcy51cGRhdGVUYXNrU3RvcmFnZSh0aGlzLnRhc2tzKVxuICAgIH1cblxuICAgIGRlbGV0ZVRhc2sodGFza0lkOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgdGFza0lkeCA9IHRoaXMudGFza3MuZmluZEluZGV4KHRhc2sgPT4gdGFzay5pZCA9PT0gdGFza0lkKVxuICAgICAgICB0aGlzLnRhc2tzLnNwbGljZSh0YXNrSWR4LCAxKVxuICAgICAgICB0aGlzLnVwZGF0ZUxpc3RlbmVycygpXG4gICAgICAgIHVzZXJNZXNzYWdlLnJlbmRlck1lc3NhZ2UoYFRhc2sgUmVtb3ZlZCBTdWNjZXNzZnVsbHlgKVxuXG4gICAgICAgIHRoaXMudXBkYXRlVGFza1N0b3JhZ2UodGhpcy50YXNrcylcbiAgICB9XG5cbiAgICBtb3ZlVGFzayh0YXNrSWQ6IHN0cmluZywgbmV3U3RhdHVzOiBUYXNrU3RhdHVzKSB7XG4gICAgICAgIGNvbnN0IHRhc2sgPSB0aGlzLnRhc2tzLmZpbmQocHJqID0+IHByai5pZCA9PT0gdGFza0lkKVxuICAgICAgICBpZiAodGFzayAmJiB0YXNrLnN0YXR1cyAhPT0gbmV3U3RhdHVzKSB7XG4gICAgICAgICAgICB0YXNrLnN0YXR1cyA9IG5ld1N0YXR1c1xuICAgICAgICAgICAgdGhpcy51cGRhdGVMaXN0ZW5lcnMoKVxuICAgICAgICAgICAgdGhpcy51cGRhdGVUYXNrU3RvcmFnZSh0aGlzLnRhc2tzKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdXBkYXRlTGlzdGVuZXJzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGxpc3RlbmVyRnVuYyBvZiB0aGlzLmxpc3RlbmVycykge1xuICAgICAgICAgICAgbGlzdGVuZXJGdW5jKHRoaXMudGFza3Muc2xpY2UoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlVGFza1N0b3JhZ2UoZGF0YTogVGFza1tdKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZVNlcnZpY2Uuc2F2ZVRvU3RvcmFnZSh0aGlzLlNUT1JBR0VfS0VZLCBkYXRhKVxuICAgIH1cbiAgICBcbiAgICBwcml2YXRlIGRlbW9UYXNrczogVGFza1tdID0gW1xuICAgICAgICB7XG4gICAgICAgICAgICBpZDogbWFrZUlkKCksXG4gICAgICAgICAgICB0aXRsZTogYENyZWF0ZSB5b3VyIGZpcnN0IHRhc2tgLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGBDaGVjayBpdCBvdXQhYCxcbiAgICAgICAgICAgIHByaW9yaXR5OiAxLFxuICAgICAgICAgICAgc3RhdHVzOiBUYXNrU3RhdHVzLkFjdGl2ZSxcbiAgICAgICAgICAgIGNyZWF0ZWRBdDogRGF0ZS5ub3coKVxuICAgICAgICB9XG4gICAgXVxufVxuZXhwb3J0IGNvbnN0IHRhc2tTdGF0ZSA9IFRhc2tTdGF0ZS5nZXRJbnN0YW5jZSgpIiwiaW1wb3J0IHsgVmFsaWRhdGFibGUgfSBmcm9tIFwiLi4vdXRpbC92YWxpZGF0aW9uXCJcblxuZXhwb3J0IGNsYXNzIFZhbGlkYXRpb25Dcml0ZXJpYSB7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBlbnRlcmVkVGl0bGU6IHN0cmluZywgXG4gICAgICAgIHB1YmxpYyBlbnRlcmVkRGVzY3JpcHRpb246IHN0cmluZywgXG4gICAgICAgIHB1YmxpYyBlbnRlcmVkcHJpb3JpdHk6IG51bWJlcikgeyB9XG5cbiAgICB0aXRsZVZhbGlkYXRhYmxlOiBWYWxpZGF0YWJsZSA9IHtcbiAgICAgICAgZmllbGQ6IGB0aXRsZWAsXG4gICAgICAgIHZhbHVlOiB0aGlzLmVudGVyZWRUaXRsZSxcbiAgICAgICAgaXNSZXF1aXJlZDogdHJ1ZSxcbiAgICB9XG4gICAgZGVzY3JpcHRpb25WYWxpZGF0YWJsZTogVmFsaWRhdGFibGUgPSB7XG4gICAgICAgIGZpZWxkOiBgZGVzY3JpcHRpb25gLFxuICAgICAgICB2YWx1ZTogdGhpcy5lbnRlcmVkRGVzY3JpcHRpb24sXG4gICAgICAgIGlzUmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIG1pbkxlbmd0aDogNVxuICAgIH1cbiAgICBwcmlvcml0eVZhbGlkYXRhYmxlOiBWYWxpZGF0YWJsZSA9IHtcbiAgICAgICAgZmllbGQ6IGBwcmlvcml0eWAsXG4gICAgICAgIHZhbHVlOiB0aGlzLmVudGVyZWRwcmlvcml0eSxcbiAgICAgICAgaXNSZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgbWluOiAxLFxuICAgICAgICBtYXg6IDVcbiAgICB9XG59IiwiLy8gVE9ETzogcmV0dXJuIGEgVGFza1xuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIi4vYmFzZS1jb21wb25lbnRcIlxuaW1wb3J0IHsgdmFsaWRhdGUgfSBmcm9tIFwiLi4vdXRpbC92YWxpZGF0aW9uXCJcbmltcG9ydCB7IEF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmRcIlxuaW1wb3J0IHsgdGFza1N0YXRlIH0gZnJvbSBcIi4uL3N0YXRlL3Rhc2stc3RhdGVcIlxuaW1wb3J0IHsgVGFzaywgVGFza1N0YXR1cyB9IGZyb20gXCIuLi9tb2RlbHMvdGFza1wiXG5pbXBvcnQgeyBWYWxpZGF0aW9uQ3JpdGVyaWEgfSBmcm9tIFwiLi4vbW9kZWxzL3ZhbGlkYXRpb24tY3JpdGVyaWFcIlxuXG5leHBvcnQgY2xhc3MgVGFza0lucHV0IGV4dGVuZHMgQ29tcG9uZW50PEhUTUxEaXZFbGVtZW50LCBIVE1MRm9ybUVsZW1lbnQ+IHtcbiAgICAvL2lucHV0IGZpZWxkc1xuICAgIHRpdGxlSW5wdXRFbDogSFRNTElucHV0RWxlbWVudFxuICAgIGRlc2NyaXB0aW9uSW5wdXRFbDogSFRNTElucHV0RWxlbWVudFxuICAgIHByaW9yaXR5SW5wdXRFbDogSFRNTElucHV0RWxlbWVudFxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKGB0YXNrLWlucHV0YCwgYHRhc2stZm9ybS13cmFwZXJgLCB0cnVlLCBgdXNlci1pbnB1dGApXG4gICAgICAgIC8vIHNlbGVjdGlvbiBsb2dpY1xuICAgICAgICB0aGlzLnRpdGxlSW5wdXRFbCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGAjdGl0bGVgKSBhcyBIVE1MSW5wdXRFbGVtZW50XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb25JbnB1dEVsID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCNkZXNjcmlwdGlvbmApIGFzIEhUTUxJbnB1dEVsZW1lbnRcbiAgICAgICAgdGhpcy5wcmlvcml0eUlucHV0RWwgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgI3ByaW9yaXR5YCkgYXMgSFRNTElucHV0RWxlbWVudFxuXG4gICAgICAgIHRoaXMuY29uZmlndXJlKClcbiAgICB9XG5cbiAgICBjb25maWd1cmUoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBzdWJtaXRgLCB0aGlzLnN1Ym1pdEhhbmRsZXIpXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnYXRoZXJVc2VySW5wdXQoKTogVGFzayB8IHZvaWQge1xuICAgICAgICBjb25zdCBlbnRlcmVkVGl0bGUgPSB0aGlzLnRpdGxlSW5wdXRFbC52YWx1ZVxuICAgICAgICBjb25zdCBlbnRlcmVkRGVzY3JpcHRpb24gPSB0aGlzLmRlc2NyaXB0aW9uSW5wdXRFbC52YWx1ZVxuICAgICAgICBjb25zdCBlbnRlcmVkcHJpb3JpdHkgPSArdGhpcy5wcmlvcml0eUlucHV0RWwudmFsdWVcbiAgICAgICAgLy8gaW5wdXQgdmFsaWRhdGlvbiBjcml0ZXJpYVxuICAgICAgICBjb25zdCB2YWxpZGF0aW9uQ3JpdGVyaWEgPSBuZXcgVmFsaWRhdGlvbkNyaXRlcmlhKGVudGVyZWRUaXRsZSwgZW50ZXJlZERlc2NyaXB0aW9uLCBlbnRlcmVkcHJpb3JpdHkpICAgICAgICBcbiAgICAgICAgY29uc3Qge3RpdGxlVmFsaWRhdGFibGUsIGRlc2NyaXB0aW9uVmFsaWRhdGFibGUsIHByaW9yaXR5VmFsaWRhdGFibGV9ID0gdmFsaWRhdGlvbkNyaXRlcmlhXG4gICAgICAgIC8vIGlucHV0IHZhbGlkYXRpb25cbiAgICAgICAgaWYgKHZhbGlkYXRlKHRpdGxlVmFsaWRhdGFibGUpICYmXG4gICAgICAgICAgICB2YWxpZGF0ZShkZXNjcmlwdGlvblZhbGlkYXRhYmxlKSAmJlxuICAgICAgICAgICAgdmFsaWRhdGUocHJpb3JpdHlWYWxpZGF0YWJsZSkpIHtcbiAgICAgICAgICAgIHRoaXMuY2xlYXJJbnB1dHMoKVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBUYXNrKGVudGVyZWRUaXRsZSwgZW50ZXJlZERlc2NyaXB0aW9uLCBlbnRlcmVkcHJpb3JpdHksIFRhc2tTdGF0dXMuQWN0aXZlLCBEYXRlLm5vdygpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBjbGVhcklucHV0cygpIHtcbiAgICAgICAgdGhpcy50aXRsZUlucHV0RWwudmFsdWUgPSBgYFxuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uSW5wdXRFbC52YWx1ZSA9IGBgXG4gICAgICAgIHRoaXMucHJpb3JpdHlJbnB1dEVsLnZhbHVlID0gYGBcbiAgICB9XG5cbiAgICBAQXV0b2JpbmRcbiAgICBwcml2YXRlIHN1Ym1pdEhhbmRsZXIoZXY6IEV2ZW50KSB7XG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgY29uc3QgdXNlcklucHV0ID0gdGhpcy5nYXRoZXJVc2VySW5wdXQoKVxuICAgICAgICBpZiAodXNlcklucHV0KSB0YXNrU3RhdGUuYWRkVGFzayh1c2VySW5wdXQpXG4gICAgfVxuXG4gICAgcmVuZGVyQ29udGVudCgpOiB2b2lkIHsgfVxufSIsImltcG9ydCB7IEF1dG9iaW5kIH0gZnJvbSBcIi4uL2RlY29yYXRvcnMvYXV0b2JpbmRcIlxuaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSBcIi4vYmFzZS1jb21wb25lbnRcIlxuaW1wb3J0IHsgVGFzayB9IGZyb20gXCIuLi9tb2RlbHMvdGFza1wiXG5pbXBvcnQgeyBEcmFnZ2FibGUgfSBmcm9tIFwiLi4vbW9kZWxzL2RyYWctZHJvcFwiXG5pbXBvcnQgeyB0YXNrU3RhdGUgfSBmcm9tIFwiLi4vc3RhdGUvdGFzay1zdGF0ZVwiXG5pbXBvcnQgeyBmb3JtYXREYXRlVGltZSB9IGZyb20gXCIuLi91dGlsL2Zvcm1hdC1kYXRlLXRpbWVcIlxuXG5leHBvcnQgY2xhc3MgVGFza0l0ZW0gZXh0ZW5kcyBDb21wb25lbnQ8SFRNTFVMaXN0RWxlbWVudCwgSFRNTExJRWxlbWVudD5cbiAgICBpbXBsZW1lbnRzIERyYWdnYWJsZSB7XG4gICAgcHJpdmF0ZSB0YXNrOiBUYXNrXG5cbiAgICBjb25zdHJ1Y3Rvcihob3N0SWQ6IHN0cmluZywgdGFzazogVGFzaykge1xuICAgICAgICBzdXBlcihgc2luZ2xlLXRhc2tgLCBob3N0SWQsIGZhbHNlLCB0YXNrLmlkISlcbiAgICAgICAgdGhpcy50YXNrID0gdGFza1xuICAgICAgICB0aGlzLmNvbmZpZ3VyZSgpXG4gICAgICAgIHRoaXMucmVuZGVyQ29udGVudCgpICAgICAgICBcbiAgICB9XG5cbiAgICBAQXV0b2JpbmRcbiAgICBkcmFnU3RhcnRIYW5kbGVyKGV2OiBEcmFnRXZlbnQpIHtcbiAgICAgICAgZXYuZGF0YVRyYW5zZmVyIS5zZXREYXRhKGB0ZXh0L3BsYWluYCwgdGhpcy50YXNrLmlkISlcbiAgICAgICAgZXYuZGF0YVRyYW5zZmVyIS5lZmZlY3RBbGxvd2VkID0gYG1vdmVgXG4gICAgfVxuXG4gICAgY29uZmlndXJlKCkgeyAgICAgIFxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgZGVsZXRlLWJ0bmApIS5pZCA9IGBkZWxldGUtYnRuLSR7dGhpcy50YXNrLmlkIX1gXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBkZWxldGUtYnRuLSR7dGhpcy50YXNrLmlkIX1gKSEub25jbGljayA9ICgpID0+IHRoaXMub25EZWxldGVUYXNrKHRoaXMudGFzay5pZCEpXG5cbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoYGRyYWdzdGFydGAsIHRoaXMuZHJhZ1N0YXJ0SGFuZGxlcilcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoYGRyYWdlbmRgLCB0aGlzLmRyYWdFbmRIYW5kbGVyKVxuICAgIH1cblxuICAgIHJlbmRlckNvbnRlbnQoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKGBoM2ApIS50ZXh0Q29udGVudCA9IHRoaXMudGFzay50aXRsZVxuICAgICAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgaDRgKSEudGV4dENvbnRlbnQgPSBgUHJpb3JpdHk6IGAgKyB0aGlzLnRhc2sucHJpb3JpdHlcbiAgICAgICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYGg1YCkhLnRleHRDb250ZW50ID0gZm9ybWF0RGF0ZVRpbWUodGhpcy50YXNrLmNyZWF0ZWRBdClcbiAgICAgICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYHBgKSEudGV4dENvbnRlbnQgPSB0aGlzLnRhc2suZGVzY3JpcHRpb25cbiAgICB9XG5cbiAgICBwcml2YXRlIG9uRGVsZXRlVGFzayh0YXNrSWQ6IHN0cmluZykgeyAgICAgICBcbiAgICAgICAgdGFza1N0YXRlLmRlbGV0ZVRhc2sodGFza0lkKVxuICAgIH1cblxuICAgIGRyYWdFbmRIYW5kbGVyKF9ldjogRHJhZ0V2ZW50KSB7XG4gICAgfVxufSIsImV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlVGltZSh0aW1lc3RhbXA6IG51bWJlcil7XG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHRpbWVzdGFtcCkudG9EYXRlU3RyaW5nKClcbiAgICBjb25zdCBob3VycyA9IG5ldyBEYXRlKHRpbWVzdGFtcCkuZ2V0SG91cnMoKVxuICAgIGNvbnN0IG1pbnV0ZXMgPSBuZXcgRGF0ZSh0aW1lc3RhbXApLmdldE1pbnV0ZXMoKVxuICAgIGNvbnN0IGZvcm1hdHRlZERhdGUgPSBgJHtkYXRlfSBhdCAke2hvdXJzfToke21pbnV0ZXN9YFxuICAgIHJldHVybiBmb3JtYXR0ZWREYXRlICAgICAgICBcbn0iLCJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tIFwiLi9iYXNlLWNvbXBvbmVudFwiXG5pbXBvcnQgeyBBdXRvYmluZCB9IGZyb20gXCIuLi9kZWNvcmF0b3JzL2F1dG9iaW5kXCJcbmltcG9ydCB7IHRhc2tTdGF0ZSB9IGZyb20gXCIuLi9zdGF0ZS90YXNrLXN0YXRlXCJcbmltcG9ydCB7IERyYWdUYXJnZXQgfSBmcm9tIFwiLi4vbW9kZWxzL2RyYWctZHJvcFwiXG5pbXBvcnQgeyBUYXNrLCBUYXNrU3RhdHVzIH0gZnJvbSBcIi4uL21vZGVscy90YXNrXCJcbmltcG9ydCB7IFRhc2tJdGVtIH0gZnJvbSBcIi4vdGFzay1pdGVtXCJcblxuZXhwb3J0IGNsYXNzIFRhc2tMaXN0IGV4dGVuZHMgQ29tcG9uZW50PEhUTUxEaXZFbGVtZW50LCBIVE1MRWxlbWVudD5cbiAgICBpbXBsZW1lbnRzIERyYWdUYXJnZXQge1xuICAgIGFzc2lnbmVkVGFza3M6IFRhc2tbXSA9IFtdXG4gICAgc29ydEJ5OiBzdHJpbmcgPSBgYFxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdHlwZTogYGFjdGl2ZWAgfCBgZG9uZWApIHtcbiAgICAgICAgc3VwZXIoYHRhc2stbGlzdGAsIGBsaXN0cy13cmFwZXJgLCBmYWxzZSwgYCR7dHlwZX0tdGFza3NgKVxuICAgICAgICB0aGlzLmNvbmZpZ3VyZSgpXG4gICAgICAgIC8vIHN0YXRlIG1hbmFnZW1lbnRcbiAgICAgICAgdGhpcy5yZW5kZXJDb250ZW50KClcbiAgICAgICAgdGFza1N0YXRlLnF1ZXJ5KClcbiAgICB9XG5cbiAgICBAQXV0b2JpbmRcbiAgICBkcmFnT3ZlckhhbmRsZXIoZXY6IERyYWdFdmVudCkge1xuICAgICAgICBpZiAoZXYuZGF0YVRyYW5zZmVyICYmIGV2LmRhdGFUcmFuc2Zlci50eXBlc1swXSA9PT0gYHRleHQvcGxhaW5gKSB7XG4gICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgICAgICBjb25zdCBsaXN0RWwgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgdWxgKSFcbiAgICAgICAgICAgIGxpc3RFbC5jbGFzc0xpc3QuYWRkKGBkcm9wcGFibGVgKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgQEF1dG9iaW5kXG4gICAgZHJvcEhhbmRsZXIoZXY6IERyYWdFdmVudCkge1xuICAgICAgICBjb25zdCBwcmpJZCA9IGV2LmRhdGFUcmFuc2ZlciEuZ2V0RGF0YShgdGV4dC9wbGFpbmApXG4gICAgICAgIHRhc2tTdGF0ZS5tb3ZlVGFzayhwcmpJZCwgdGhpcy50eXBlID09PSBgYWN0aXZlYCA/IFRhc2tTdGF0dXMuQWN0aXZlIDogVGFza1N0YXR1cy5Eb25lKVxuXG4gICAgICAgIGNvbnN0IGRyb3BwYWJsZUVscyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJ1bFwiKVxuICAgICAgICBmb3IgKGNvbnN0IGVsIG9mIGRyb3BwYWJsZUVscykge1xuICAgICAgICAgICAgZWwuY2xhc3NMaXN0LnJlbW92ZShgZHJvcHBhYmxlYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbmZpZ3VyZSgpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoYGRyYWdvdmVyYCwgdGhpcy5kcmFnT3ZlckhhbmRsZXIpXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBkcmFnbGVhdmVgLCB0aGlzLmRyYWdMZWF2ZUhhbmRsZXIpXG4gICAgICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGBkcm9wYCwgdGhpcy5kcm9wSGFuZGxlcilcbiAgICAgICAgLy8gc29ydGluZ1xuICAgICAgICBjb25zdCBzZWxlY3RFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBzb3J0YnlgKSBhcyBIVE1MU2VsZWN0RWxlbWVudFxuICAgICAgICBzZWxlY3RFbCEuaWQgPSBgc29ydGJ5LSR7dGhpcy50eXBlfWBcbiAgICAgICAgdGhpcy5zb3J0QnkgPSBzZWxlY3RFbC52YWx1ZVxuICAgICAgICBzZWxlY3RFbC5hZGRFdmVudExpc3RlbmVyKGBjaGFuZ2VgLCAoKSA9PiB0aGlzLmhhbmRsZVNvcnRieUNoYW5nZShzZWxlY3RFbC52YWx1ZSkpXG4gICAgICAgIC8vIHN0YXRlIG1hbmFnZW1lbnRcbiAgICAgICAgdGFza1N0YXRlLmFkZExpc3RlbmVyKHRoaXMucmVuZGVyRmlsdGVyZFRhc2tzKVxuICAgIH1cblxuICAgIHJlbmRlckNvbnRlbnQoKSB7XG4gICAgICAgIGNvbnN0IGxpc3RJZCA9IGAke3RoaXMudHlwZX0tdGFzay1saXN0YFxuICAgICAgICB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgdWxgKSEuaWQgPSBsaXN0SWRcbiAgICAgICAgdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYGgyYCkhLnRleHRDb250ZW50ID0gdGhpcy50eXBlLnRvVXBwZXJDYXNlKClcbiAgICB9XG5cbiAgICBAQXV0b2JpbmRcbiAgICByZW5kZXJGaWx0ZXJkVGFza3ModGFza3M6IFRhc2tbXSkge1xuICAgICAgICBjb25zdCBmaWx0ZXJlZFRhc2tzID0gdGFza3MuZmlsdGVyKChwcmopID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLnR5cGUgPT09IGBhY3RpdmVgKSByZXR1cm4gcHJqLnN0YXR1cyA9PT0gVGFza1N0YXR1cy5BY3RpdmVcbiAgICAgICAgICAgIHJldHVybiBwcmouc3RhdHVzID09PSBUYXNrU3RhdHVzLkRvbmVcbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5hc3NpZ25lZFRhc2tzID0gZmlsdGVyZWRUYXNrc1xuICAgICAgICB0aGlzLnJlbmRlclRhc2tzKClcbiAgICB9XG5cbiAgICBwcml2YXRlIHJlbmRlclRhc2tzKCkge1xuICAgICAgICBjb25zdCBsaXN0RWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHt0aGlzLnR5cGV9LXRhc2stbGlzdGApISBhcyBIVE1MVUxpc3RFbGVtZW50XG4gICAgICAgIGxpc3RFbC5pbm5lckhUTUwgPSBgYFxuICAgICAgICAvL3NvcnRpbmdcbiAgICAgICAgY29uc3Qgc29ydGVkVGFza3MgPSB0aGlzLmFzc2lnbmVkVGFza3Muc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuc29ydEJ5ID09PSBgcHJpb3JpdHlgKSByZXR1cm4gYS5wcmlvcml0eSAtIGIucHJpb3JpdHlcbiAgICAgICAgICAgIHJldHVybiBiLmNyZWF0ZWRBdCAtIGEuY3JlYXRlZEF0XG4gICAgICAgIH0pXG4gICAgICAgIC8vIHJlbmRlcmluZ1xuICAgICAgICBmb3IgKGNvbnN0IHByakl0ZW0gb2Ygc29ydGVkVGFza3MpIHtcbiAgICAgICAgICAgIG5ldyBUYXNrSXRlbSh0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcihgdWxgKSEuaWQsIHByakl0ZW0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIGhhbmRsZVNvcnRieUNoYW5nZSh2YWw6IHN0cmluZykge1xuICAgICAgICB0aGlzLnNvcnRCeSA9IHZhbFxuICAgICAgICB0aGlzLnJlbmRlclRhc2tzKClcbiAgICB9XG5cbiAgICBkcmFnTGVhdmVIYW5kbGVyKF9ldjogRHJhZ0V2ZW50KSB7IH1cbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbWFpbi5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21haW4uY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgVGFza0lucHV0IH0gZnJvbSBcIi4vY29tcG9uZW50cy90YXNrLWlucHV0XCJcbmltcG9ydCB7IFRhc2tMaXN0IH0gZnJvbSBcIi4vY29tcG9uZW50cy90YXNrLWxpc3RcIlxuaW1wb3J0IFwiLi9tYWluLmNzc1wiXG5cbmNvbnNvbGUubG9nKCdhcHAudHMgV29ya2luZycpXG4vLyBJTlNUQU5USUFUSU9OXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdET00gTG9hZGVkJylcbiAgICBuZXcgVGFza0lucHV0KCk7XG4gICAgbmV3IFRhc2tMaXN0KCdhY3RpdmUnKTtcbiAgICBuZXcgVGFza0xpc3QoJ2RvbmUnKTtcbn0pOyJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImkiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInRlbXBsYXRlSUQiLCJob3N0RWxJZCIsImluc2VydEF0U3RhcnQiLCJuZXdFbElkIiwidGVtcGxhdGVFbCIsImdldEVsZW1lbnRCeUlkIiwiaG9zdEVsIiwiaW1wb3J0ZWROb2RlIiwiaW1wb3J0Tm9kZSIsImZpcnN0RWxlbWVudENoaWxkIiwiYXR0YWNoIiwiaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiVXNlck1lc3NhZ2UiLCJzdXBlciIsIm1lc3NhZ2UiLCJzdGF0aWMiLCJpbnN0YW5jZSIsImNvbmZpZ3VyZSIsInJlbmRlckNvbnRlbnQiLCJyZW5kZXJNZXNzYWdlIiwibWVzc2FnZUVsIiwiaW5uZXJUZXh0IiwibWVzc2FnZVdyYXBwZXJFbCIsImNsYXNzTGlzdCIsImFkZCIsInNldFRpbWVvdXQiLCJ1c2VyTWVzc2FnZSIsImdldEluc3RhbmNlIiwidmFsaWRhdGUiLCJ2YWxpZGF0aW9uSW5wdXQiLCJpc1ZhbGlkIiwidmFsdWUiLCJmaWVsZCIsImlzUmVxdWlyZWQiLCJtaW5MZW5ndGgiLCJtYXhMZW5ndGgiLCJtaW4iLCJtYXgiLCJ0cmltIiwiQXV0b2JpbmQiLCJfMSIsIl8yIiwiZGVzY3JpcHRvciIsIm9yaWdpbmFsTWV0aG9kIiwiY29uZmlndXJhYmxlIiwiYmluZCIsIlRhc2tTdGF0dXMiLCJUYXNrIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInByaW9yaXR5Iiwic3RhdHVzIiwiY3JlYXRlZEF0IiwiTG9jYWxTdG9yYWdlU2VydmljZSIsInNhdmVUb1N0b3JhZ2UiLCJsb2NhbFN0b3JhZ2UiLCJzZXRJdGVtIiwibG9hZEZyb21TdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlIiwibG9jYWxTdG9yYWdlU2VydmljZSIsIm1ha2VJZCIsInR4dCIsImNoYXJBdCIsIk1hdGgiLCJmbG9vciIsInBvc3NpYmxlIiwicmFuZG9tIiwiU3RhdGUiLCJsaXN0ZW5lcnMiLCJhZGRMaXN0ZW5lciIsImxpc3RlbmVyRnVuYyIsIlRhc2tTdGF0ZSIsInRhc2tzIiwiU1RPUkFHRV9LRVkiLCJkZW1vVGFza3MiLCJBY3RpdmUiLCJEYXRlIiwibm93IiwicXVlcnkiLCJ1cGRhdGVUYXNrU3RvcmFnZSIsInVwZGF0ZUxpc3RlbmVycyIsImFkZFRhc2siLCJuZXdUYXNrIiwiZGVsZXRlVGFzayIsInRhc2tJZCIsInRhc2tJZHgiLCJmaW5kSW5kZXgiLCJ0YXNrIiwibW92ZVRhc2siLCJuZXdTdGF0dXMiLCJmaW5kIiwicHJqIiwic2xpY2UiLCJ0YXNrU3RhdGUiLCJWYWxpZGF0aW9uQ3JpdGVyaWEiLCJlbnRlcmVkVGl0bGUiLCJlbnRlcmVkRGVzY3JpcHRpb24iLCJlbnRlcmVkcHJpb3JpdHkiLCJ0aXRsZVZhbGlkYXRhYmxlIiwiZGVzY3JpcHRpb25WYWxpZGF0YWJsZSIsInByaW9yaXR5VmFsaWRhdGFibGUiLCJUYXNrSW5wdXQiLCJ0aXRsZUlucHV0RWwiLCJkZXNjcmlwdGlvbklucHV0RWwiLCJwcmlvcml0eUlucHV0RWwiLCJhZGRFdmVudExpc3RlbmVyIiwic3VibWl0SGFuZGxlciIsImdhdGhlclVzZXJJbnB1dCIsInZhbGlkYXRpb25Dcml0ZXJpYSIsImNsZWFySW5wdXRzIiwiZXYiLCJwcmV2ZW50RGVmYXVsdCIsInVzZXJJbnB1dCIsIlRhc2tJdGVtIiwiaG9zdElkIiwiZHJhZ1N0YXJ0SGFuZGxlciIsImRhdGFUcmFuc2ZlciIsInNldERhdGEiLCJlZmZlY3RBbGxvd2VkIiwib25jbGljayIsIm9uRGVsZXRlVGFzayIsImRyYWdFbmRIYW5kbGVyIiwidGltZXN0YW1wIiwidGV4dENvbnRlbnQiLCJ0b0RhdGVTdHJpbmciLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJfZXYiLCJUYXNrTGlzdCIsInR5cGUiLCJhc3NpZ25lZFRhc2tzIiwic29ydEJ5IiwiZHJhZ092ZXJIYW5kbGVyIiwidHlwZXMiLCJkcm9wSGFuZGxlciIsInByaklkIiwiZ2V0RGF0YSIsIkRvbmUiLCJkcm9wcGFibGVFbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZWwiLCJkcmFnTGVhdmVIYW5kbGVyIiwic2VsZWN0RWwiLCJoYW5kbGVTb3J0YnlDaGFuZ2UiLCJyZW5kZXJGaWx0ZXJkVGFza3MiLCJsaXN0SWQiLCJ0b1VwcGVyQ2FzZSIsImZpbHRlcmVkVGFza3MiLCJmaWx0ZXIiLCJyZW5kZXJUYXNrcyIsImlubmVySFRNTCIsInNvcnRlZFRhc2tzIiwic29ydCIsImIiLCJwcmpJdGVtIiwidmFsIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=